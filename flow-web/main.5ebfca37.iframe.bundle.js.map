{"version":3,"file":"main.5ebfca37.iframe.bundle.js","mappings":";;AAkCA;AACA;AAGA;AACA;AACA;AACA;AAGA;ACgCA;;;AAGA;ACxDA;;AAEA;;;;;AAOA;;AAEA;;;;AAIA;AACA;AACA;AAGA;AACA;AAGA;;AAEA;;;;AAMA;;AAEA;;;;AAMA;;AAUA;;AAEA;;;;;AAKA;AACA;;AAIA;ACTA;AACA;AACA;AAGA;;AAyBA;;;;;;;;;;AAUA;;;;;AClFA;ACfA;AACA;AACA;ACrBA;;;AC2bA;AACA;;;AAGA;ACtYA;;AAEA;;;;AAKA;AChCA;AACA;AACA;AA8CA;AAZA;AACA;AACA;AAIA;AC3DA;AAEA;AAIA;;AAGA;ACEA;AACA;;AAIA;AAEA;AACA;;AAIA","sources":["webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/AMPProductCarousel/Image.js","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/AMPProductCarousel/Macros.js","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/AMPProductCarousel/constants.js","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/AMPProductCarousel/Comparison.js","webpack://@indy/flow-web/./app/component/library/AMP/hoc/withScript.js","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/helpers/updateItems.js","webpack://@indy/flow-web/./app/component/library/Article/ProductCarousel/ProductCarousel.js","webpack://@indy/flow-web/./app/component/library/Section/components/article/ArticleHeroNew.js","webpack://@indy/flow-web/./app/component/library/StaticPage/PaymentFlow/Confirmation/OnboardingJourney/Card/NewsletterFormCard.js","webpack://@indy/flow-web/./app/types/CustomPropTypes.js","webpack://@indy/flow-web/./app/types/ElementIdType.js","webpack://@indy/flow-web/./app/component/library/Article/Luxury/Embeds/Image.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { styled } from 'styled-components';\n\nimport * as device from '@app/constants/devices';\n\nimport { minify } from '@app/util/taggedTemplates';\nimport { appendQueryString, fastlyOptions } from '@app/util/url';\n\nimport BaseAmpImage from '@app/component/library/AMP/Image';\n\nimport {\n  MUSTACHE_IMAGE,\n  MUSTACHE_IMAGE_PLACEHOLDER,\n} from '@stories/helpers/withMustacheImageHack';\n\nimport {\n  TILE_WIDTH_LAPTOP,\n  TILE_WIDTH_TABLET,\n  TILE_WIDTH_MOBILE,\n} from './constants';\n\nconst Wrapper = styled.figure`\n  padding: 0;\n  margin: 0;\n  aspect-ratio: 1.333;\n`;\n\nconst Image = ({ className }) => {\n  const maxWidth = TILE_WIDTH_LAPTOP;\n  const src = '{{imgUrl}}';\n  const srcX1 = appendQueryString(src, fastlyOptions({ width: maxWidth }));\n  const srcX2 = appendQueryString(src, fastlyOptions({ width: maxWidth * 2 }));\n\n  const srcset = minify`\n    ${srcX1} 1x,\n    ${srcX2} 2x\n  `;\n\n  const sizes = minify`\n    ${device.laptop} ${TILE_WIDTH_LAPTOP}px,\n    ${device.tablet} ${TILE_WIDTH_TABLET}px,\n    ${device.maxTablet} ${TILE_WIDTH_MOBILE}px\n  `;\n\n  const AmpImage = (props) => (\n    <BaseAmpImage\n      src=\"/img/placeholder.png\"\n      alt=\"{{alt}}\"\n      width=\"133\"\n      height=\"100\"\n      layout=\"responsive\"\n      {...props}\n    />\n  );\n\n  return (\n    <Wrapper className={className}>\n      {'{{#imgUrl}}'}\n      <AmpImage\n        src={srcX1}\n        srcSet={srcset}\n        sizes={sizes}\n        data-test-snapshot={MUSTACHE_IMAGE}\n      />\n      {'{{/imgUrl}}'}\n      {'{{^imgUrl}}'}\n      <AmpImage data-test-snapshot={MUSTACHE_IMAGE_PLACEHOLDER} />\n      {'{{/imgUrl}}'}\n    </Wrapper>\n  );\n};\n\nImage.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Image;\n","import * as breakPoints from '@app/constants/breakpoints';\n\nimport { minify } from '@app/util/taggedTemplates';\n\nimport {\n  STATE,\n  BIND_MIN_THRESHOLD_REACHED,\n  BIND_MAX_THRESHOLD,\n  BIND_MAX_THRESHOLD_REACHED,\n  BIND_IS_PRODUCT_SELECTED,\n  BIND_CHECKBOX_CLASS,\n  BIND_SHOW_CONTROLS,\n  BIND_SELECT_PRODUCTS,\n  BIND_TABLE_SIZE_CLASS,\n  BIND_TRANSFORM_TABLE,\n  BIND_TRANSFORM_SELECTED,\n} from './constants';\n/**\n * These are complex expressions and in order to be able to unit test them\n * outside of AMP they have been moved into a separate files where they can be\n * imported as strings and evaluated.\n */\nimport transformSelected from './macros/transformSelected.amp.js';\nimport transformTable from './macros/transformTable.amp.js';\n\nconst Macros = () => (\n  <>\n    {/*\n     * Deduces when the minimum number of products has been selected in order\n     * to enable the feature\n     * @returns {bool}\n     */}\n    <amp-bind-macro\n      id={BIND_MIN_THRESHOLD_REACHED}\n      expression={`${STATE}.selected.length >= ${STATE}.minThreshold`}\n    ></amp-bind-macro>\n\n    {/*\n     * Deduces when the maximum number of products has been selected that is\n     * supported by the feature\n     * @returns {bool}\n     */}\n    <amp-bind-macro\n      id={BIND_MAX_THRESHOLD}\n      expression={`${STATE}.window.width >= ${breakPoints.tablet} ? 3 : 2`}\n    ></amp-bind-macro>\n\n    {/*\n     * Deduces when the maximum number of products has been selected that is\n     * supported by the feature\n     * @returns {bool}\n     */}\n    <amp-bind-macro\n      id={BIND_MAX_THRESHOLD_REACHED}\n      expression={`${STATE}.selected.length >= ${BIND_MAX_THRESHOLD}()`}\n    ></amp-bind-macro>\n\n    {/*\n     * Determines whether or not a product has been selected for comparison\n     * @returns {bool}\n     */}\n    <amp-bind-macro\n      id={BIND_IS_PRODUCT_SELECTED}\n      arguments=\"id\"\n      expression={`${STATE}.selected.includes(id)`}\n    ></amp-bind-macro>\n\n    {/*\n     * Returns the class for disabling an amp-selector option if it has not been\n     * selected by the time the max threshold has been reached\n     * @returns {string} Class denoting disabled state or an empty string\n     */}\n    <amp-bind-macro\n      id={BIND_CHECKBOX_CLASS}\n      arguments=\"class, id\"\n      expression={minify`\n        (${BIND_MAX_THRESHOLD_REACHED}() && !${BIND_IS_PRODUCT_SELECTED}(id.toString()))\n        ? class + ' is-disabled'\n        : class\n      `}\n    ></amp-bind-macro>\n\n    {/*\n     * Determins whether or not to show the comparison controls based on a\n     * whether a single option has been chosen\n     * @returns {bool}\n     */}\n    <amp-bind-macro\n      id={BIND_SHOW_CONTROLS}\n      expression={`${STATE}.selected.length > 0 && !${STATE}.modalOpen`}\n    ></amp-bind-macro>\n\n    {/*\n     * Creates an array of products based on the selected options\n     * @returns {Array} Array of products who's IDs match the selected options\n     */}\n    <amp-bind-macro\n      id={BIND_SELECT_PRODUCTS}\n      arguments=\"selected\"\n      expression={`${STATE}.list[0].items.filter(a => ${STATE}.selected.includes(a.id))`}\n    ></amp-bind-macro>\n\n    {/*\n     * Creates a class that allows for dynamic resizing of the comparison table\n     * @returns {string} Class with column count variation\n     */}\n    <amp-bind-macro\n      id={BIND_TABLE_SIZE_CLASS}\n      expression={`'is-comparing-' + ${STATE}.selected.length + '-items'`}\n    ></amp-bind-macro>\n\n    {/*\n     * Zips together any products passed to it such that mustache can output\n     * them in a tabular format. Otherwise they are orientation by column which,\n     * until subgrids are fully supported, results in misaligned rows.\n     *\n     * The `productSpecs` prop is a special piece of filth which:\n     *   1. groups a few key specs i.e. 'best', 'rating', 'price'\n     *   2. sorts the selected product to find the one with the longest\n     *      productSpecs array\n     *   3. Uses that array to map the remaining products\n     * It does this otherwise it would be possible for a product with a short\n     * list of specs to govern the overall length of the table, thus preventing\n     * some specs from being displayed\n     *\n     * @returns {Array} An amp-list consumable array with a single object\n     * listing all specs under each prop for all products\n     *\n     * @todo: find a way to unit test AMP macros\n     */}\n    <amp-bind-macro\n      id={BIND_TRANSFORM_TABLE}\n      arguments=\"selected\"\n      expression={transformTable}\n    ></amp-bind-macro>\n\n    {/*\n     * Creates an array of products based on the selected items\n     * @returns {Array} Array of products whose title and imageUrl match the selected items\n     */}\n    <amp-bind-macro\n      id={BIND_TRANSFORM_SELECTED}\n      arguments=\"selected\"\n      expression={transformSelected}\n    ></amp-bind-macro>\n  </>\n);\n\nexport default Macros;\n","import {\n  ID_PRODUCT_COMPARISON_STATE,\n  ID_PRODUCT_COMPARISON_TABLE,\n  ID_PRODUCT_COMPARISON_MODAL,\n  ID_PRODUCT_COMPARISON_SELECTOR,\n} from '@app/constants/ids';\n\nimport { minify } from '@app/util/taggedTemplates';\n\nexport const STATE = ID_PRODUCT_COMPARISON_STATE;\n\nexport const BIND_MIN_THRESHOLD_REACHED = 'minThresholdReached';\nexport const BIND_MAX_THRESHOLD = 'maxThreshold';\nexport const BIND_MAX_THRESHOLD_REACHED = 'maxThresholdReached';\nexport const BIND_IS_PRODUCT_SELECTED = 'isProductSelected';\nexport const BIND_CHECKBOX_CLASS = 'checkboxClass';\nexport const BIND_SHOW_CONTROLS = 'showControls';\nexport const BIND_SELECT_PRODUCTS = 'selectProducts';\nexport const BIND_TABLE_SIZE_CLASS = 'tableSizeClass';\nexport const BIND_TRANSFORM_TABLE = 'transformTable';\nexport const BIND_TRANSFORM_SELECTED = 'transformSelected';\n\nexport const ACTION_RESET = minify`\n  ${ID_PRODUCT_COMPARISON_SELECTOR}.clear,\n  AMP.setState({\n    ${STATE}: {\n      selected: [],\n      table: [],\n    },\n  })\n`;\n\nexport const ACTION_OPENMODAL = minify`\n  AMP.setState({\n    ${STATE}: {\n      modalOpen: true,\n    },\n  }),\n  ${ID_PRODUCT_COMPARISON_TABLE}.refresh,\n  ${ID_PRODUCT_COMPARISON_TABLE}.changeToLayoutContainer(),\n  ${ID_PRODUCT_COMPARISON_MODAL}\n`;\n\nexport const ACTION_CLOSEMODAL = minify`\n  ${ID_PRODUCT_COMPARISON_MODAL}.close\n`;\n\nexport const ACTION_MODALCLOSE = minify`\n  AMP.setState({\n    ${STATE}: {\n      modalOpen: false,\n    },\n  })\n`;\n\nexport const ACTION_SELECT = minify`\n  AMP.setState({\n    ${STATE}: {\n      selected: event.selectedOptions\n    },\n  })\n`;\n\nexport const ACTION_SCROLL_TO_ANCHOR_ID = minify`\n  {{anchorId}}.scrollTo(duration=500,position=top)\n`;\n\n/**\n * Despite this action consisting of a collection of other actions, it is not\n * possible to reuse them because only one AMP.setState can be performed per\n * action.\n * @todo: create a helper for AMP.setState\n */\nexport const ACTION_READ_REVIEW_FROM_MODAL = minify`\n  AMP.setState({\n    ${STATE}: {\n      selected: [],\n      modalOpen: false,\n    },\n  }),\n  ${ID_PRODUCT_COMPARISON_MODAL}.close,\n  ${ID_PRODUCT_COMPARISON_SELECTOR}.clear,\n  {{anchorId}}.scrollTo(duration=500,position=top)\n`;\n\nexport const CHECKBOX_MARGIN = 16;\nexport const CHECKBOX_HEIGHT = 18;\n\nconst checkboxRealEstate = CHECKBOX_MARGIN + CHECKBOX_HEIGHT;\n\nexport const LIST_HEIGHTS = {\n  mobile: 564,\n  tablet: 594,\n  laptop: 720,\n};\n\nexport const LIST_HEIGHTS_WITH_CHECKBOX = {\n  mobile: LIST_HEIGHTS.mobile + checkboxRealEstate,\n  tablet: LIST_HEIGHTS.tablet + checkboxRealEstate,\n  laptop: LIST_HEIGHTS.laptop + checkboxRealEstate,\n};\n\nexport const TILE_WIDTH_MOBILE = 140;\nexport const TILE_WIDTH_TABLET = 156;\nexport const TILE_WIDTH_LAPTOP = 190;\n\nexport const MODAL_MAX_WIDTH = 714;\n\nexport const MODAL_STATE_VALUE = 'Compare';\nexport const DISPLAY_THRESHOLD = 2;\nexport const FULL_PAGE_THRESHOLD = 5;\n\nexport const CLASS_MODAL_COMPARING_2 = 'is-comparing-2-items';\nexport const CLASS_MODAL_COMPARING_3 = 'is-comparing-3-items';\n","import classnames from 'classnames';\nimport { PropTypes } from 'prop-types';\nimport { styled } from 'styled-components';\n\nimport { CLASS_JS_PRODUCT_COMPARISON } from '@app/constants/classNames';\nimport * as device from '@app/constants/devices';\nimport { ZINDEX_COMPARE_MODAL } from '@app/constants/zIndex';\n\nimport { minify } from '@app/util/taggedTemplates';\n\nimport { withScript } from '@app/component/library/AMP/hoc/withScript';\n\nimport Carousel from './Carousel';\nimport Controls from './Controls';\nimport List from './List';\nimport Macros from './Macros';\nimport Modal from './Modal';\nimport { Stars } from './StarRating';\nimport State from './State';\nimport Tile from './Tile';\nimport {\n  STATE,\n  TILE_WIDTH_MOBILE,\n  TILE_WIDTH_TABLET,\n  TILE_WIDTH_LAPTOP,\n  LIST_HEIGHTS,\n  LIST_HEIGHTS_WITH_CHECKBOX,\n} from './constants';\nimport { ComparisonType } from './types';\n\nconst Wrapper = styled.div`\n  --tile-width: ${TILE_WIDTH_MOBILE}px;\n  --border: 1px solid ${({ theme }) => theme.color.divider.dark};\n  --border-radius: ${(props) => props.theme.dimension.outerArea.borderRadius};\n  background-color: ${(props) => props.theme.color.canvas.secondary};\n\n  @media ${device.tablet} {\n    --tile-width: ${TILE_WIDTH_TABLET}px;\n  }\n\n  @media ${device.laptop} {\n    --tile-width: ${TILE_WIDTH_LAPTOP}px;\n  }\n\n  amp-list {\n    width: 100%;\n  }\n\n  amp-lightbox {\n    z-index: ${ZINDEX_COMPARE_MODAL};\n  }\n`;\n\nconst Title = styled.h3((props) => ({\n  ...props.theme.textStyle.tag.small.expanded,\n  margin: 0,\n  '--padding-top': '8px',\n  '--padding-x': '12px',\n  padding: 'var(--padding-top) var(--padding-x) 0',\n  [`@media ${device.tablet}`]: {\n    ...props.theme.textStyle.tag.base.expanded,\n  },\n  [`@media ${device.laptop}`]: {\n    ...props.theme.textStyle.tag.large.expanded,\n    '--padding-top': '16px',\n    '--padding-x': '24px',\n  },\n}));\n\nconst Comparison = withScript(\n  ({ items, title = 'Our Top Picks', isComparison = false, initialState }) => {\n    const listHeights = isComparison\n      ? LIST_HEIGHTS_WITH_CHECKBOX\n      : LIST_HEIGHTS;\n    const height = `${listHeights.mobile}px`;\n    const heights = minify`\n    ${device.laptop} ${listHeights.laptop}px,\n    ${device.tablet} ${listHeights.tablet}px,\n    ${listHeights.mobile}px\n  `;\n\n    const { selected, table } = initialState || {};\n    const showControls = selected?.length > 0;\n\n    return (\n      <Wrapper>\n        <Macros />\n        <State list={items} selected={selected} table={table} />\n        {title && <Title>{title}</Title>}\n        <List height={height} heights={heights}>\n          <Carousel height={height} heights={heights}>\n            <Tile hasCheckbox={isComparison} />\n          </Carousel>\n        </List>\n        {isComparison && (\n          <>\n            <Modal />\n            <Controls hidden={!showControls} />\n          </>\n        )}\n        <Stars />\n      </Wrapper>\n    );\n  },\n)`\n  AMP.setState({\n    ${STATE}: {\n      window: {\n        width: window.innerWidth,\n        height: window.innerHeight,\n      },\n    },\n  });\n\n  window.addEventListener('resize', () => {\n    AMP.setState({\n      ${STATE}: {\n        carouselSlide: 0,\n      }\n    })\n  })\n`;\n\nComparison.propTypes = ComparisonType;\n\n/*\n * Re-wrapping this seems a bit convoluted but the intention is to ensure that\n * all of the rendered markup sits within a single element; when wrapping the\n * Comparison in an amp-script using the HOC the output is <amp-script /> and\n * associated <script />.\n */\nconst WrappedComparison = ({ className, ...rest }) => (\n  <div className={classnames(className, CLASS_JS_PRODUCT_COMPARISON)}>\n    <Comparison {...rest} />\n  </div>\n);\n\nWrappedComparison.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default WrappedComparison;\n","/* cspell:words minified */\n\nimport crypto from 'crypto';\n\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Terser from 'terser';\n\nimport { withRequest } from '@brightsites/flow-core/lib/providers/RequestProvider';\n\nimport AmpScript from '../Script';\n\n/**\n * @param {string} script script code in string\n * @see {@link https://github.com/ampproject/amp.dev/issues/2807#issuecomment-524567751}\n */\nconst generateCSPHash = (script) => {\n  const hash = crypto.createHash('sha384');\n  const data = hash.update(script, 'utf-8');\n  return `sha384-${data\n    .digest('base64')\n    .replace(/=/g, '')\n    .replace(/\\+/g, '-')\n    .replace(/\\//g, '_')}`;\n};\n\nlet buildAllHash = (() => {\n  let hashes = [];\n  return (hash) => {\n    hashes.includes(hash) || hashes.push(hash);\n    return hashes.join(' ');\n  };\n})();\n\nexport const withScript =\n  (WrappedComponent, scriptProps) =>\n  (snippet, ...exprs) => {\n    return withRequest((props) => {\n      const script = exprs.reduce((result, expr, index) => {\n        const isFunc = typeof expr === 'function';\n        const value = isFunc ? expr(props) : expr;\n\n        return result + value + snippet[index + 1];\n      }, snippet[0]);\n      const prefix = scriptProps?.script ? `${scriptProps.script}-` : 'script-';\n      // compress the script for preventing reach the size restriction\n      const minified = Terser.minify(script);\n      const hash = generateCSPHash(minified.code);\n      const allHash = buildAllHash(hash);\n      const [id] = useState(`${prefix}${hash.slice(-6)}`);\n      return (\n        <>\n          <AmpScript {...scriptProps} script={id}>\n            <WrappedComponent {...props} />\n          </AmpScript>\n          <script\n            type=\"text/plain\"\n            target=\"amp-script\"\n            id={id}\n            dangerouslySetInnerHTML={{ __html: script }}\n          />\n          <Helmet>\n            <meta name=\"amp-script-src\" content={allHash} />\n            <script\n              async=\"\"\n              custom-element=\"amp-script\"\n              src=\"https://cdn.ampproject.org/v0/amp-script-0.1.js\"\n            />\n          </Helmet>\n        </>\n      );\n    });\n  };\n","import {\n  TILE_WIDTH_MOBILE,\n  TILE_WIDTH_TABLET,\n  TILE_WIDTH_LAPTOP,\n} from '@indy/ui/ProductCarousel';\n\nimport * as device from '@app/constants/devices';\n\nimport { minify } from '@app/util/taggedTemplates';\n\nimport { getImage } from './getImage';\n\n/**\n * @todo build img props, srcset/sizes in @see preprocessProducts\n */\n\nconst imgMaxWidth = TILE_WIDTH_LAPTOP;\n\nconst imgSizes = minify`\n  ${device.laptop} ${TILE_WIDTH_LAPTOP}px,\n  ${device.tablet} ${TILE_WIDTH_TABLET}px,\n  ${device.maxTablet} ${TILE_WIDTH_MOBILE}px\n`;\n\nexport const updateItems = (items) =>\n  items.map((item) => ({\n    ...item,\n    image: getImage(item, imgMaxWidth, imgSizes),\n    endpoint: item.priceComparisonEndpointAMP,\n  }));\n","import ProductCarousel from '@indy/ui/ProductCarousel';\nimport ProductComparison, {\n  PRODUCT_COMPARISON_RESET,\n} from '@indy/ui/ProductComparison';\n\nimport PageStateContext from '@app/context/PageState';\n\nimport propTypes from './ProductCarousel.types';\nimport { fetchPriceFactory } from './helpers/fetchPriceFactory';\nimport { updateItems } from './helpers/updateItems';\n\nconst noop = () => {};\n\nconst ProductCarouselHydrated = ({ items, title, isComparison }) => {\n  const updatedItems = updateItems(items);\n\n  if (isComparison) {\n    return (\n      <PageStateContext.Consumer>\n        {({\n          productComparison: { selectedItems, showModal },\n          productPrices,\n          dispatchers,\n        }) => (\n          <>\n            <ProductCarousel\n              fetchPrice={fetchPriceFactory(dispatchers)}\n              initialIndex={0}\n              isComparison={true}\n              livePrices={productPrices}\n              products={updatedItems}\n              selectedItemIDs={selectedItems}\n              title={title}\n              onToggleSelectedProduct={dispatchers.toggleSelectedProduct}\n              onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n              onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n            />\n\n            <ProductComparison\n              dispatchers={dispatchers}\n              products={updatedItems}\n              returnFocus={`#${PRODUCT_COMPARISON_RESET}`}\n              selectedItemIDs={selectedItems}\n              showModal={showModal}\n              livePrices={productPrices}\n              onBuyNowClick={dispatchers.clickProductComparisonBuyNow}\n              onReadReviewClick={dispatchers.clickProductComparisonReadReview}\n            />\n          </>\n        )}\n      </PageStateContext.Consumer>\n    );\n  }\n\n  return (\n    <PageStateContext.Consumer>\n      {({ productPrices, dispatchers }) => (\n        <ProductCarousel\n          fetchPrice={fetchPriceFactory(dispatchers)}\n          initialIndex={0}\n          isComparison={false}\n          livePrices={productPrices}\n          products={updatedItems}\n          title={title}\n          onToggleSelectedProduct={noop}\n          onBuyNowClick={dispatchers.clickProductCarouselBuyNow}\n          onReadReviewClick={dispatchers.clickProductCarouselReadReview}\n        />\n      )}\n    </PageStateContext.Consumer>\n  );\n};\n\nProductCarouselHydrated.propTypes = propTypes;\n\nexport default ProductCarouselHydrated;\n","import { css, styled } from 'styled-components';\n\nimport { withRequest } from '@brightsites/flow-core/lib/providers/RequestProvider';\n\nimport * as breakPoints from '@app/constants/breakpoints';\nimport * as device from '@app/constants/devices';\n\nimport {\n  CLASS_PREMIUM_BADGING,\n  CLASS_TABOOLA_EXCLUDED,\n} from '@app/constants/classNames';\n\nimport { isVideoHero } from '@app/services/article';\n\nimport { getClassName } from '@app/util/classes';\nimport { hex2rgba } from '@app/util/colours';\nimport { getComponentTheme } from '@app/util/themes';\n\nimport Camera from '@app/component/library/icons/Camera';\nimport Video from '@app/component/library/icons/Video';\n\nimport ArticleAuthor from './ArticleAuthor';\nimport ArticleCapsule from './ArticleCapsule';\nimport ArticleHeadline from './ArticleHeadline';\nimport ArticleIcon from './ArticleIcon';\nimport ArticleImageNew from './ArticleImageNew';\nimport ArticleLead from './ArticleLead';\nimport ArticleRelated from './ArticleRelated';\nimport ArticleTitle from './ArticleTitle';\nimport {\n  articleItemHoverColor,\n  articleItemPrimaryColor,\n  relatedArticleIcon,\n} from './helpers';\n\nconst Wrapper = styled.div`\n  .title,\n  .lead,\n  .lead p {\n    color: ${(props) => props.theme.color.dark.ink.base};\n  }\n`;\n\nexport const articleHeroBackground = ({ sectionTheme, theme: { color } }) =>\n  sectionTheme === 'premium'\n    ? color.teal160\n    : sectionTheme === 'climate'\n      ? color.climate.primary.base\n      : sectionTheme === 'sgi'\n        ? color.sgi.primary.base\n        : hex2rgba(color.primary.base, 0.8);\n\nconst ArticleHeroNew = styled(\n  ({\n    className,\n    heroSrcset,\n    configuration,\n    hideWow,\n    data,\n    data: {\n      path,\n      titleShort,\n      title,\n      hero,\n      lead,\n      sections,\n      sponsorName,\n      premium,\n      capsuleSection,\n      capsuleHighlight,\n      isLiveBlog,\n      isLiveVideo,\n      relatedLinks,\n      showRelatedLinks,\n      showLead,\n      taboolaExcluded,\n      extra,\n    },\n    sectionTheme,\n    includeLead = false,\n    fromDMPU = false,\n    preloadImage = false,\n    fetchImagePriority,\n    isParentPremium,\n    isSideColumn,\n    imageCropRatio,\n    shouldRenderAsImageOverlay = false,\n  }) => {\n    const theme = getComponentTheme(data, configuration);\n    const videoArticle = isVideoHero(hero);\n    const articleIcon = ArticleIcon(videoArticle);\n\n    return (\n      <Wrapper\n        className={getClassName(className, 'hero-article', {\n          'article-premium': premium,\n          'from-dmpu': fromDMPU,\n          [`article-${sectionTheme}`]: sectionTheme?.length > 0,\n          [CLASS_TABOOLA_EXCLUDED]: taboolaExcluded,\n          'article-image-overlay': shouldRenderAsImageOverlay,\n        })}\n      >\n        <ArticleImageNew\n          hero={hero}\n          heroSrcset={heroSrcset}\n          path={path}\n          preload={preloadImage}\n          fetchPriority={fetchImagePriority}\n          cropRatio={imageCropRatio}\n        />\n        <ArticleCapsule\n          $sectionTheme={sectionTheme}\n          sections={sections}\n          sponsorName={sponsorName}\n          override={capsuleSection}\n          highlight={capsuleHighlight}\n          isLiveBlog={isLiveBlog}\n          isLiveVideo={isLiveVideo}\n          sponsoredCapsule={extra?.isShowSponsoredCapsule}\n          hideWow={hideWow}\n          premium={premium}\n          path={path}\n        />\n        <div\n          className={getClassName('content', {\n            'content-media': theme !== 'voices' && articleIcon,\n            [CLASS_PREMIUM_BADGING]: premium || sectionTheme === 'premium',\n          })}\n        >\n          {theme !== 'voices' && articleIcon}\n          {/* To not include Author name on HeroPlusDMPU component on Premium sections */}\n          <ArticleHeadline sectionTheme={sectionTheme} premium={premium}>\n            <ArticleTitle\n              path={path}\n              title={title}\n              titleShort={titleShort}\n              sectionTheme={sectionTheme}\n            />\n          </ArticleHeadline>\n          {includeLead && showLead && (\n            <ArticleLead className=\"lead\">{lead}</ArticleLead>\n          )}\n          {showRelatedLinks && relatedLinks && (\n            <ArticleRelated\n              relatedLinks={relatedLinks}\n              sectionTheme={sectionTheme}\n              isParentPremium={premium || isParentPremium}\n              isSideColumn={isSideColumn}\n            />\n          )}\n        </div>\n      </Wrapper>\n    );\n  },\n)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n\n  .capsules {\n    display: flex;\n    position: absolute;\n    top: 0;\n    left: 0;\n  }\n\n  .capsule {\n    display: flex;\n    padding: 6px 8px 4px;\n    color: ${(props) => props.theme.color.ink.inverted};\n    font-size: 12px;\n    letter-spacing: 0.26px;\n    line-height: 12px;\n  }\n\n  .capsule-highlight {\n    margin-right: 0;\n    background: ${(props) => props.theme.color.semiotic.live};\n    color: ${(props) => props.theme.color.ink.base};\n  }\n\n  .live-blog::before {\n    background-position: center;\n  }\n\n  .image-wrap {\n    display: flex;\n    width: 100%;\n    height: auto;\n    flex-direction: column;\n    flex-grow: 1;\n\n    amp-img,\n    img {\n      aspect-ratio: 3 / 2;\n    }\n\n    img {\n      display: block;\n    }\n  }\n\n  .placeholder {\n    img {\n      object-fit: cover;\n    }\n  }\n\n  .content {\n    position: relative;\n    width: 100%;\n    box-sizing: border-box;\n    padding: 8px;\n    background: ${(props) => props.theme.color.dark.canvas.card};\n\n    @media ${device.laptop} {\n      padding: 16px;\n    }\n\n    h2 {\n      letter-spacing: -0.0208em;\n    }\n  }\n\n  ${ArticleHeadline} {\n    margin: 0;\n    font-size: 24px;\n    font-weight: bold;\n    line-height: 28px;\n\n    .title {\n      color: ${(props) => props.theme.color.dark.ink.base};\n\n      &:hover {\n        color: ${articleItemHoverColor};\n      }\n    }\n  }\n\n  ${ArticleRelated}:empty {\n    display: none;\n  }\n\n  ${ArticleRelated} li::before {\n    background-image: url(${relatedArticleIcon});\n  }\n\n  ${ArticleRelated} a:hover {\n    color: ${articleItemHoverColor};\n  }\n\n  .content-media {\n    position: relative;\n    padding-top: 24px;\n  }\n\n  .lead {\n    padding-top: 8px;\n  }\n\n  .lead + ${ArticleRelated} {\n    margin-top: 12px;\n  }\n\n  .lead a {\n    color: ${articleItemPrimaryColor};\n\n    &:hover {\n      color: ${articleItemHoverColor};\n    }\n  }\n\n  .lead,\n  .lead p {\n    margin: 0;\n    font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n    font-size: 14px;\n    font-weight: normal;\n    line-height: 18px;\n\n    @media ${device.laptop} {\n      font-size: 16px;\n      line-height: 20px;\n    }\n  }\n  ${Camera}, ${Video} {\n    display: flex;\n    position: absolute;\n    top: -15px;\n    left: 8px;\n    width: 32px;\n    height: 32px;\n    align-items: center;\n    justify-content: center;\n    border-radius: 50%;\n    background-color: ${articleHeroBackground};\n\n    @media ${device.tablet} {\n      left: 12px;\n    }\n\n    > svg {\n      width: 60%;\n      fill: ${(props) => props.theme.color.canvas.base};\n      stroke: transparent;\n    }\n  }\n  ${Video} {\n    > svg {\n      width: 80%;\n    }\n  }\n\n  ${ArticleRelated} {\n    margin-top: 8px;\n  }\n\n  &.from-dmpu {\n    .content {\n      @media ${device.maxTablet} {\n        position: relative;\n        background: ${(props) => props.theme.color.dark.canvas.base};\n        opacity: 1;\n      }\n    }\n  }\n\n  &.article-voices {\n    ${ArticleAuthor} {\n      &:hover {\n        color: ${(props) => props.theme.color.actionBrand.base};\n      }\n    }\n  }\n\n  &.article-premium {\n    .content {\n      display: flex;\n      box-sizing: border-box;\n      flex-direction: column;\n      background: ${(props) => props.theme.color.premium.dark.canvas.card};\n\n      @media ${device.laptop} {\n        padding-bottom: 8px;\n      }\n    }\n\n    .${CLASS_PREMIUM_BADGING}::after {\n      margin-top: auto;\n      background-image: url(https://static.independent.co.uk/static-assets/logo-premium-light.svg);\n      color: ${({ theme }) => theme.color.premium.divider.brand};\n    }\n\n    .title:hover {\n      color: ${(props) => props.theme.color.premium.actionBrand.alt};\n    }\n\n    ${ArticleRelated} a:hover {\n      color: ${(props) => props.theme.color.premium.actionBrand.alt};\n    }\n\n    ${ArticleRelated} li::before {\n      background-image: url(/img/icons/related-links-premium-new.svg);\n    }\n\n    .capsule:not(.capsule-highlight) {\n      background-color: ${(props) => props.theme.color.premium.primary.base};\n    }\n\n    ${ArticleAuthor} {\n      display: block;\n      color: ${(props) => props.theme.color.teal70};\n      font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n      font-size: 14px;\n      font-style: normal;\n      font-weight: bold;\n      line-height: 1.4em;\n      text-transform: uppercase;\n\n      &:hover {\n        color: ${(props) => props.theme.color.teal130};\n      }\n    }\n    ${Camera}, ${Video} {\n      background: ${({ theme }) =>\n        hex2rgba(theme.color.premium.primary.base, 0.8)};\n    }\n\n    .lead a {\n      color: ${(props) => props.theme.color.premium.actionBrand.base};\n      font-weight: bold;\n\n      &:hover {\n        color: ${(props) => props.theme.color.premium.actionBrand.alt};\n      }\n    }\n  }\n\n  &.article-best {\n    .title {\n      .highlight {\n        color: ${(props) => props.theme.color.actionBrand.base};\n        font-family: ${(props) => props.theme.fontFamily.secondaryFont};\n        text-transform: uppercase;\n\n        &:hover {\n          color: ${(props) => props.theme.color.actionBrand.alt};\n        }\n      }\n    }\n  }\n\n  &.article-image-overlay {\n    @media ${device.tablet} {\n      --parent-width: ${breakPoints.tablet}px;\n      --parent-padding: ${({ theme }) => theme.spacing.x3}px;\n      --container-width: calc(var(--parent-width) - var(--parent-padding));\n      --three-by-two-image-ratio: calc(3 / 2);\n      --overlapping-point-default: ${breakPoints.mobileS / 2}px;\n      --image-content-overlapping-point: var(--overlapping-point-default);\n      --overlapping-point-without-gap: calc(\n        var(--image-content-overlapping-point) - 1px\n      );\n\n      .image-wrap {\n        flex-shrink: 0;\n      }\n\n      .content {\n        min-height: var(--image-content-overlapping-point);\n        box-sizing: border-box;\n        flex-shrink: 0;\n        transform: translateY(\n          calc(-100% + var(--overlapping-point-without-gap))\n        );\n        ${({ data: { premium }, theme: { color } }) => {\n          const targetColor = premium\n            ? color.premium.dark.canvas.card\n            : color.dark.canvas.card;\n\n          return css`\n            background: linear-gradient(\n                to top,\n                ${targetColor} var(--image-content-overlapping-point),\n                ${hex2rgba(targetColor, 0.7)} 100%\n              )\n              no-repeat;\n          `;\n        }}\n      }\n    }\n\n    @media ${device.laptop} {\n      --parent-width: ${breakPoints.laptop}px;\n      --parent-padding: ${({ theme }) => theme.spacing.x4}px;\n    }\n  }\n`;\n\nexport default withRequest(ArticleHeroNew);\n","import PropTypes from 'prop-types';\nimport { useEffect, useRef, forwardRef } from 'react';\nimport { css, styled } from 'styled-components';\n\nimport {\n  MultiStepCardWithExtraSpacing,\n  CLASS_IS_ACTIVE,\n  InnerWrapper,\n  GoBackToPreviousStep,\n  Description,\n  TagLine,\n} from '@indy/ui/MultiStepCard';\n\nimport * as device from '@app/constants/devices';\n\nimport { BUTTON_VARIANT_TERTIARY } from '@app/component/library/Button/constants';\n\nimport NewsletterForm from '../NewsletterForm';\nimport {\n  ONBOARDING_CONTINUE_BUTTON,\n  ONBOARDING_GO_BACK_BUTTON,\n} from '../Onboarding.constants';\n\nimport { ContinueButton } from './CardButtons';\n\nconst GoBackButton = styled(GoBackToPreviousStep).attrs({\n  variant: BUTTON_VARIANT_TERTIARY,\n})`\n  z-index: 2;\n  color: ${({ theme }) => theme.color.primary.base};\n`;\n\nconst DefaultWrapper = styled(MultiStepCardWithExtraSpacing)`\n  max-height: calc(var(--card-inactive-top-position) * 2);\n\n  ${InnerWrapper} {\n    padding-bottom: calc(\n      var(--card-inactive-top-position) + ${({ theme }) => theme.spacing.x3}px\n    );\n  }\n\n  &.${CLASS_IS_ACTIVE} {\n    ${({ $myStep }) => `max-height: var(--card-${$myStep}-height);`}\n    box-shadow: none;\n  }\n`;\n\nconst SubsBeforeRegWrapper = styled(DefaultWrapper)`\n  &.${CLASS_IS_ACTIVE} {\n    ${TagLine} {\n      display: none;\n    }\n  }\n\n  ${({ $isOnPreviousStep }) =>\n    $isOnPreviousStep &&\n    css`\n      ${TagLine} {\n        display: block;\n        font: ${({ theme }) =>\n          theme.textStyle.subscriptionConfirmationPage.cardTwoStepSubBeforeReg};\n        opacity: 1;\n        text-transform: none;\n      }\n    `}\n\n  ${({ $hasThreeSteps }) =>\n    $hasThreeSteps &&\n    'margin-top: calc(var(--card-inactive-top-position) * -1);'}\n\n  @media ${device.tablet} {\n    ${ContinueButton} {\n      width: 364px;\n    }\n\n    &:not(.${CLASS_IS_ACTIVE}) {\n      ${Description} {\n        opacity: 0;\n      }\n    }\n  }\n\n  @media ${device.laptop} {\n    ${ContinueButton} {\n      width: 312px;\n    }\n  }\n`;\n\nconst NewsletterFormCard = forwardRef(function NewsletterFormCard(\n  {\n    currentStep,\n    myTabIndex,\n    totalSteps,\n    myStep,\n    isCardActive,\n    handleCurrentStepUpdate,\n    newsletters,\n    isSubsBeforeRegEnabled,\n    hasThreeSteps,\n  },\n  ref,\n) {\n  const goBackButtonRef = useRef(null);\n  const isOnFutureStep = currentStep > myStep;\n  const Wrapper = isSubsBeforeRegEnabled\n    ? SubsBeforeRegWrapper\n    : DefaultWrapper;\n\n  useEffect(() => {\n    if (isOnFutureStep) {\n      goBackButtonRef.current?.focus();\n    }\n  }, [isOnFutureStep]);\n\n  return (\n    <Wrapper\n      currentStep={\n        isSubsBeforeRegEnabled\n          ? 'Choose your newsletters'\n          : `Step ${myStep}/${totalSteps}`\n      }\n      title=\"Choose your newsletters\"\n      description=\"Receive the stories that matter, straight to your inbox. We've selected a few we think you'll like\"\n      isCardActive={isCardActive}\n      ref={ref}\n      $myStep={myStep}\n      $hasThreeSteps={hasThreeSteps}\n      {...(isSubsBeforeRegEnabled && {\n        $isOnPreviousStep: currentStep < myStep,\n      })}\n      {...(isOnFutureStep && {\n        goBackToPreviousStep: (\n          <GoBackButton\n            ref={goBackButtonRef}\n            onClick={() => handleCurrentStepUpdate(myStep)}\n            tabIndex={isCardActive ? -1 : 0}\n            data-test={ONBOARDING_GO_BACK_BUTTON}\n          >\n            {isSubsBeforeRegEnabled\n              ? 'Go back to Newsletters'\n              : `Go back to step ${myStep} / ${totalSteps}`}\n          </GoBackButton>\n        ),\n      })}\n    >\n      <NewsletterForm\n        newsletters={newsletters}\n        cardPrimaryTabIndex={myTabIndex}\n      />\n      <ContinueButton\n        onClick={() => handleCurrentStepUpdate(myStep + 1)}\n        tabIndex={myTabIndex}\n        data-test={ONBOARDING_CONTINUE_BUTTON}\n      >\n        Continue\n      </ContinueButton>\n    </Wrapper>\n  );\n});\n\nNewsletterFormCard.propTypes = {\n  currentStep: PropTypes.number,\n  handleCurrentStepUpdate: PropTypes.func,\n  myTabIndex: PropTypes.number,\n  totalSteps: PropTypes.number,\n  myStep: PropTypes.number,\n  isCardActive: PropTypes.bool,\n  newsletters: PropTypes.array.isRequired,\n  isSubsBeforeRegEnabled: PropTypes.bool,\n  hasThreeSteps: PropTypes.bool,\n};\n\nexport default NewsletterFormCard;\n","import {\n  REGEXP_MUSTACHE_PLACEHOLDER,\n  REGEXP_AMP_ACTION,\n  REGEXP_EMPTY_PARAGRAPH,\n  REGEXP_EMPTY_STRING,\n  REGEXP_URL_REMOTE,\n  REGEXP_URL_LOCAL,\n  REGEXP_PRICE,\n} from '@app/constants/regexps';\n\nimport { minify } from '@app/util/taggedTemplates';\n\nconst isFalsy = (value) => [undefined, null].includes(value);\n\n/**\n * \"Invalid prop `propName` supplied to `componentName`.\n * Expected `expected` e.g. `example`.\n * Received `received`.\"\n * @param {string} propName The name of the prop being validated\n * @param {string} componentName The name of the component being validated\n * @param {string} expected The expected prop-type\n * @param {string} [received] The actual prop-type\n * @param {string} [example] An example of the expected prop-type\n * @returns {string} Preformatted error message\n */\nconst message = (\n  propName,\n  componentName,\n  expected,\n  received = '',\n  example = '',\n) => minify`\n  Invalid prop \\`${propName}\\` supplied to ${componentName}.\n  Expected ${expected}${example ? ` e.g. \\`${example}\\`` : ''}.\n  ${received ? `Received '${received}'.` : ''}\n`;\n\n/**\n * Validates prop values\n * @name PropTypesValidator\n * @function\n * @param {string} props Component props object\n * @param {string} propName Name of the prop being validated\n * @param {string} componentName Name of the component being validated\n * @link https://reactjs.org/docs/typechecking-with-proptypes.html\n */\n\n/**\n * Creates a prop-type with its corresponding 'required' alternative\n * @param {import('prop-types').Validator} validator PropTypes custom validator\n * @returns {import('prop-types').Requireable} Prop-type validator with chainable \"isRequired\" version\n */\nfunction generatePropType(validator) {\n  const propType = (props, propName, componentName) => {\n    const value = props[propName];\n\n    if (isFalsy(value)) {\n      return;\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  propType.isRequired = (props, propName, componentName) => {\n    const value = props[propName];\n\n    if (isFalsy(value)) {\n      return new Error(minify`\n        The prop \\`${propName}\\` is marked as required\n        in \\`${componentName}\\`,\n        but its value is \\`${value}\\`.\n      `);\n    }\n\n    return validator(props, propName, componentName);\n  };\n\n  return propType;\n}\n\nconst validators = {\n  mustachePlaceholder(props, propName, componentName) {\n    if (!REGEXP_MUSTACHE_PLACEHOLDER.test(props[propName])) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'mustache placeholder',\n          props[propName],\n          '{{foo}}',\n        ),\n      );\n    }\n  },\n  ampAction(props, propName, componentName) {\n    if (!REGEXP_AMP_ACTION.test(props[propName])) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'AMP action',\n          props[propName],\n          '`tap:...` or `select:...`',\n        ),\n      );\n    }\n  },\n  meaningfulString(props, propName, componentName) {\n    const value = props[propName];\n    const meaningless = [REGEXP_EMPTY_PARAGRAPH, REGEXP_EMPTY_STRING];\n\n    if (typeof value !== 'string') {\n      return new Error(\n        message(propName, componentName, 'type `string`', typeof value),\n      );\n    }\n\n    if (meaningless.some((pattern) => pattern.test(value))) {\n      return new Error(\n        message(propName, componentName, 'meaningful content', value),\n      );\n    }\n  },\n  emptyString(props, propName, componentName) {\n    const value = props[propName];\n\n    if (typeof value !== 'string') {\n      return new Error(\n        message(propName, componentName, 'type `string`', typeof value),\n      );\n    }\n\n    if (!REGEXP_EMPTY_STRING.test(value)) {\n      return new Error(message(propName, componentName, 'empty string', value));\n    }\n  },\n  nonEmptyArray(props, propName, componentName) {\n    const value = props[propName];\n\n    if (!Array.isArray(value)) {\n      return new Error(\n        message(propName, componentName, 'type `Array`', typeof value),\n      );\n    }\n\n    if (value.length < 1) {\n      return new Error(message(propName, componentName, 'non-empty array'));\n    }\n  },\n  url(props, propName, componentName) {\n    if (\n      !REGEXP_URL_REMOTE.test(props[propName]) &&\n      !REGEXP_URL_LOCAL.test(props[propName])\n    ) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'URL',\n          props[propName],\n          'http://sub.domain.tld` or `/internal/path',\n        ),\n      );\n    }\n  },\n  currency(props, propName, componentName) {\n    const value = props[propName];\n    const float = parseFloat(value);\n\n    if (isNaN(float) || !REGEXP_PRICE.test(value)) {\n      return new Error(\n        message(\n          propName,\n          componentName,\n          'A currency value without symbol',\n          props[propName],\n          '\"2.99\"` or `2.99` or `2',\n        ),\n      );\n    }\n  },\n};\n\nexport default Object.entries(validators).reduce(\n  (acc, [propType, validator]) => {\n    acc[propType] = generatePropType(validator);\n    return acc;\n  },\n  {},\n);\n","import { minify } from '@app/util/taggedTemplates';\n\n/**\n * Custom prop-type helper function for element ID.\n * @param {bool} isRequired\n * @returns {import('prop-types').Requireable}\n */\nconst createType = (isRequired) => (props, propName, componentName) => {\n  const regex = /^[a-z][a-z0-9-_]*$/i;\n  const prop = props[propName];\n\n  if ([null, undefined].includes(prop) && isRequired) {\n    const value =\n      typeof prop === 'undefined' ? 'undefined' : JSON.stringify(prop);\n    return new Error(minify`\n      The prop ${propName} is marked as required in ${componentName}, but its value is ${value}\n    `);\n  }\n\n  if (!regex.test(prop)) {\n    return new Error(minify`\n        Invalid prop ${propName} supplied to ${componentName}.\n        The prop must contain digits, alphabets, hyphen and underscore only.\n      `);\n  }\n};\n\nconst Type = createType(false);\nType.isRequired = createType(true);\n\nexport const ElementIdType = Type;\n","import PropTypes from 'prop-types';\n\nimport {\n  FullBleedContainer,\n  InsetLeftContainer,\n  InsetRightContainer,\n} from '@indy/ui/Layout';\nimport { MediaPlusPaddedCaption } from '@indy/ui/MediaPlusCaption';\nimport { maxTablet, maxLaptop, maxDesktop } from '@indy/ui/devices';\n\nimport { buildSrcset } from '@app/util/image';\nimport { markupSanitizerForTags } from '@app/util/string';\nimport { minify } from '@app/util/taggedTemplates';\n\nimport Image from '@app/component/library/Common/NativeImage';\n\nimport { ALIGN_NONE, ALIGN_CENTRE, ALIGN_LEFT, ALIGN_RIGHT } from './constants';\n\n/**\n * @todo generate widths and sizes based on cols once the grid system is in\n * place\n * @explain The current implementation is a temporary solution whilst we await\n * the grid system. The widths and sizes are read from the rendered containers\n */\nexport const FULL_BLEED_WIDTHS = [360, 768, 1000, 1250];\nexport const FULL_BLEED_SIZES = minify`\n  ${maxLaptop} 100vw,\n  ${maxDesktop} 1000px,\n  1250px\n`;\n\nconst INSET_WIDTHS = [360, 767, 460, 577];\nconst INSET_SIZES = minify`\n  ${maxTablet} 100vw,\n  ${maxDesktop} 460px,\n  577px\n`;\n\nconst InsetImage = ({ data, heroLocalCaption, heroLocalCopyright }) => {\n  const {\n    align,\n    url,\n    alt,\n    caption,\n    description,\n    title,\n    copyright,\n    localCaption,\n    localCopyright,\n  } = data || {};\n  const isInset = align === ALIGN_LEFT || align === ALIGN_RIGHT;\n  const widths = isInset ? INSET_WIDTHS : FULL_BLEED_WIDTHS;\n  const sizes = isInset ? INSET_SIZES : FULL_BLEED_SIZES;\n\n  const srcset = buildSrcset(url, widths, [1, 2]);\n\n  const image = (\n    <Image\n      src={url}\n      srcSet={srcset}\n      sizes={sizes}\n      alt={alt || description || title}\n    />\n  );\n\n  const sanitisedLocalCaption =\n    localCaption && markupSanitizerForTags(localCaption);\n  const imageCopyright = heroLocalCopyright || localCopyright || copyright;\n  const imageCaption = `${\n    heroLocalCaption || sanitisedLocalCaption || caption || title || description\n  }${imageCopyright && ` (${imageCopyright})`}`;\n\n  const imagePlusCaption = (\n    <MediaPlusPaddedCaption media={image} caption={imageCaption} />\n  );\n\n  switch (align) {\n    case ALIGN_LEFT:\n      return <InsetLeftContainer>{imagePlusCaption}</InsetLeftContainer>;\n    case ALIGN_RIGHT:\n      return <InsetRightContainer>{imagePlusCaption}</InsetRightContainer>;\n    default:\n      return <FullBleedContainer>{imagePlusCaption}</FullBleedContainer>;\n  }\n};\n\nInsetImage.propTypes = {\n  data: PropTypes.shape({\n    align: PropTypes.oneOf([ALIGN_NONE, ALIGN_CENTRE, ALIGN_LEFT, ALIGN_RIGHT]),\n  }).isRequired,\n  heroLocalCaption: PropTypes.string,\n  heroLocalCopyright: PropTypes.string,\n};\n\nexport default InsetImage;\n"],"names":[],"sourceRoot":""}