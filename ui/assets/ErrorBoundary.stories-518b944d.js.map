{"version":3,"file":"ErrorBoundary.stories-518b944d.js","sources":["../../../src/components/ErrorBoundary/ErrorBoundary.tsx"],"sourcesContent":["import { ErrorInfo, Component } from 'react';\n\nimport { ErrorBoundaryProps, ErrorBoundaryState } from './ErrorBoundary.types';\n\nclass ErrorBoundary extends Component<ErrorBoundaryProps, ErrorBoundaryState> {\n  public state: ErrorBoundaryState = {\n    hasError: false,\n  };\n\n  static getDerivedStateFromError() {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, info: ErrorInfo) {\n    console.error(error, info.componentStack);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <>There was an error rendering this component</>;\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"names":["ErrorBoundary","Component","__publicField","error","info","console","jsx","Fragment","children","__name","ErrorBoundary$1"],"mappings":"wVAIA,MAAAA,UAAAC,EAAAA,SAAA,CAAA,kCAA8EC,EAAA,aAAA,CACzC,SAAA,EACvB,GACZ,OAAA,0BAAA,CAIE,MAAA,CAAO,SAAA,EAAY,CAAK,CAC1B,kBAAAC,EAAAC,EAAA,CAGEC,QAAAA,MAAAA,EAAAA,EAAAA,cAAAA,CAAwC,CAC1C,QAAA,CAGE,OAAA,KAAA,MAAA,SAEEC,EAAA,IAAAC,EAAA,SAAA,CAAA,SAAA,6CAAA,CAAA,EAGF,KAAA,MAAA,QAAkBC,CAEtB,CAtBAC,EAAAT,EAAA,iBAwBA,MAAAU,EAAAV;;;;;;;;;;;;"}