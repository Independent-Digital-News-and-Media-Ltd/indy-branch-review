{"version":3,"file":"Grid.stories-c6dbe827.js","sources":["../../../src/components/Layout/Grid/story/withContent.hoc.tsx"],"sourcesContent":["import { FC } from 'react';\nimport { styled } from 'styled-components';\n\nimport Content from '#mocks/MockContent';\n\nimport { DEVICES } from '../Grid.constants';\nimport { ColumnProps } from '../Grid.types';\n\n/**\n * @explain this is a temporary solution until we have a design for the grid\n * stories\n */\nconst Table = styled.table`\n  border-collapse: collapse;\n  font: normal 12px/16px ${({ theme }) => theme.fontFamily.secondaryFont};\n  table-layout: fixed;\n  text-align: center;\n\n  th,\n  td {\n    padding: 0 0.5em;\n    font: inherit;\n  }\n`;\n\nconst Thead = styled.thead`\n  th:first-child {\n    visibility: hidden;\n  }\n`;\n\nconst Tbody = styled.tbody`\n  th:first-child {\n    text-align: left;\n  }\n`;\n\ninterface ColumnWithContentProps extends ColumnProps {\n  children?: ReactNode;\n}\n\nconst deviceRenderLabel = (props: ColumnWithContentProps) => {\n  const { span, offset } = props;\n\n  return (\n    <div>\n      <Table>\n        <colgroup>\n          <col width=\"auto\" />\n          {span && <col width=\"10%\" />}\n          {offset && <col width=\"10%\" />}\n        </colgroup>\n        <Thead>\n          <tr>\n            <th>device</th>\n            {span && <th>↔︎</th>}\n            {offset && <th>↤</th>}\n          </tr>\n        </Thead>\n        <Tbody>\n          {DEVICES.map((device, i) => (\n            <tr key={i}>\n              <th>{device}</th>\n              {span && <td>{span?.[device] ?? '-'}</td>}\n              {offset && <td>{offset?.[device] ?? '-'}</td>}\n            </tr>\n          ))}\n        </Tbody>\n      </Table>\n    </div>\n  );\n};\n\n/**\n * A higher order component that extracts the grid props and renders a table as\n * the content to a MockContent block. This is purely for storybook purposes.\n */\nconst withContent = (\n  ColumnWithContent: FC<ColumnProps>,\n  renderLabel = deviceRenderLabel,\n) => {\n  return function Column(props: ColumnWithContentProps) {\n    const { span, offset, children } = props;\n    const label = (!!span || !!offset) && renderLabel(props);\n\n    return (\n      <ColumnWithContent {...props}>\n        <Content label={children || ''}>{label}</Content>\n      </ColumnWithContent>\n    );\n  };\n};\n\nexport default withContent;\n"],"names":["Table","styled","theme","Thead","Tbody","deviceRenderLabel","__name","props","span","offset","jsx","jsxs","DEVICES","device","i","withContent","ColumnWithContent","renderLabel","children","label","Content"],"mappings":"0eAYA,MAAAA,EAAAC,EAAA,MAAA,WAAA,CAA0B,YAAA,aAAA,CAAA,EAAA,CAAA,kDAAA,4EAAA,EAAA,CAAA,CAEE,MAAAC,CAAQ,IAAAA,EAAA,WAAA,aAAA,EAWpCC,EAAAF,EAAA,MAAA,WAAA,CAA0B,YAAA,aAAA,CAAA,EAAA,CAAA,oCAAA,CAAA,EAM1BG,EAAAH,EAAA,MAAA,WAAA,CAA0B,YAAA,aAAA,CAAA,EAAA,CAAA,kCAAA,CAAA,EAU1BI,EAAAC,EAAAC,GAAA,CACE,KAAA,CAAM,KAAAC,EAAEA,OAAAA,CAAMC,EAAAA,EAEd,OAAAC,EAAAA,IAAA,MAAA,CAAA,SAAAC,EAAAA,KAAAX,EAAA,CAAA,SAAA,CAGMW,OAAA,WAAA,CAAA,SAAA,CACED,EAAAA,IAAA,MAAA,CAAA,MAAA,MAAA,CAAA,EAAiBF,GAAAE,EAAAA,IAAA,MAAA,CAAA,MAAA,KAAA,CAAA,EACWD,GAAAC,EAAAA,IAAA,MAAA,CAAA,MAAA,KAAA,CAAA,CACE,EAAA,EAChCA,EAAA,IAAAP,EAAA,CAAA,SAAAQ,EAAAA,KAAA,KAAA,CAAA,SAAA,CAGID,EAAAA,IAAA,KAAA,CAAA,SAAA,QAAA,CAAA,EAAUF,GAAAE,EAAAA,IAAA,KAAA,CAAA,SAAA,IAAA,CAAA,EACKD,GAAAC,EAAAA,IAAA,KAAA,CAAA,SAAA,GAAA,CAAA,CACC,CAAA,CAAA,CAAA,CAAA,EAEpBA,EAAAA,IAAAN,EAAA,CAAA,SAAAQ,EAAA,IAAA,CAAAC,EAAAC,IAAAH,EAAAA,KAAA,KAAA,CAAA,SAAA,CAIMD,EAAAA,IAAA,KAAA,CAAA,SAAAG,CAAA,CAAA,EAAYL,GAAAE,EAAAA,IAAA,KAAA,CAAA,UAAAF,GAAA,YAAAA,EAAAK,KAAA,IAAA,EACwBJ,GAAAC,EAAAA,IAAA,KAAA,CAAA,UAAAD,GAAA,YAAAA,EAAAI,KAAA,IAAA,CACI,GAAAC,CAAA,CAAA,EAAA,CAG9C,CAAA,CAAA,CAAA,CAAA,CAIR,EA9BA,qBAoCAC,EAAAT,EAAA,CAAAU,EAAAC,EAAAZ,IAIEC,EAAA,SAAAC,EAAA,CACE,KAAA,CAAM,KAAAC,EAAEA,OAAAA,EAAMC,SAAAA,CAAQS,EAAAA,EACtBC,GAAA,CAAA,CAAAX,GAAA,CAAA,CAAAC,IAAAQ,EAAAV,CAAA,EAEA,OAAAG,EAAAA,IAAAM,EAAA,CAAA,GAAAT,EAAA,SAAAG,EAAAA,IAAAU,EAAA,CAAA,MAAAF,GAAA,GAAA,SAAAC,CAAA,CAAA,CAAA,CAAA,CAGE,EAPJ,UAJF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}