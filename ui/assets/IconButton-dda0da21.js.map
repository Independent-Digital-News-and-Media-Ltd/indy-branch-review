{"version":3,"file":"IconButton-dda0da21.js","sources":["../../../src/components/IconButton/IconButton.styles.ts","../../../src/components/IconButton/IconButton.tsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nimport { WrapperProps } from './IconButton.types';\n\nexport const Wrapper = styled.button<WrapperProps>`\n  --width: ${({ theme, $size, $isCosy }) =>\n    $isCosy\n      ? theme.dimension.icon[$size].width\n      : theme.dimension.minTouchArea}px;\n  display: flex;\n  position: relative;\n  width: var(--width);\n  height: var(--width);\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: center;\n  color: ${(props) => props.theme.color.actionSubtleDark.base};\n  transition: ${({ theme }) => theme.transition.base};\n  transition-property: color, background-color;\n\n  &:hover,\n  &:active,\n  &:focus-visible {\n    color: ${({ theme }) => theme.color.actionSubtleDark.alt};\n    outline: none;\n  }\n\n  &[disabled] {\n    color: ${({ theme }) => theme.color.semiotic.disabled};\n    cursor: default;\n  }\n\n  /* pseudo element to provide the minimum touch area */\n  &::after {\n    --touch-area: ${({ theme }) => theme.dimension.minTouchArea}px;\n    --size-diff: calc(var(--touch-area) - var(--width));\n    --offset: calc(var(--size-diff) / 2);\n    position: absolute;\n    content: '';\n    inset: calc(var(--offset) * -1);\n  }\n`;\n\nexport default Wrapper;\n","import { FC } from 'react';\n\nimport Icon from '#components/Icon';\n\nimport { Wrapper } from './IconButton.styles';\nimport { IconButtonProps } from './IconButton.types';\n\nconst IconButton: FC<IconButtonProps> = ({\n  title,\n  svg,\n  size = 'base',\n  isCosy = false,\n  isDisabled = false,\n  ...rest\n}) => {\n  return (\n    <Wrapper\n      {...rest}\n      title={title}\n      $size={size}\n      $isCosy={isCosy}\n      disabled={isDisabled}\n    >\n      <Icon size={size} svg={svg} />\n    </Wrapper>\n  );\n};\n\nexport default IconButton;\n"],"names":["Wrapper","styled","button","withConfig","componentId","theme","$size","$isCosy","dimension","icon","width","minTouchArea","props","color","actionSubtleDark","base","transition","alt","semiotic","disabled","IconButton","__name","title","svg","isCosy","isDisabled","rest","jsx","size","Icon","IconButton$1"],"mappings":"wOAIaA,MAAAA,EAAUC,EAAOC,OAAMC,WAAA,CAAAC,YAAA,cAAA,CAAA,EAAA,CAAA,WAAA,kJAAA,eAAA,sFAAA,oCAAA,0CAAA,yJAAA,EACvB,CAAC,CAAEC,MAAAA,EAAOC,MAAAA,EAAOC,QAAAA,CAAQ,IAClCA,EACIF,EAAMG,UAAUC,KAAKH,CAAK,EAAEI,MAC5BL,EAAMG,UAAUG,gBAQFC,EAAMP,MAAMQ,MAAMC,iBAAiBC,KACzC,CAAC,CAAEV,MAAAA,CAAM,IAAMA,EAAMW,WAAWD,KAMnC,CAAC,CAAEV,MAAAA,CAAM,IAAMA,EAAMQ,MAAMC,iBAAiBG,IAK5C,CAAC,CAAEZ,MAAAA,CAAM,IAAMA,EAAMQ,MAAMK,SAASC,SAM7B,CAAC,CAAEd,MAAAA,CAAM,IAAMA,EAAMG,UAAUG,YAAY,EC3B/DS,EAAAC,EAAA,CAAA,CAAyC,MAAAC,EACvCA,IAAAA,EACAC,KAAAA,EAAAA,OACO,OAAAC,EAAA,GACE,WAAAC,EAAA,GACI,GAAAC,CAEf,IACEC,EAAA,IAAA3B,EAAA,CAAA,GAAA0B,EAAA,MAAAJ,EAAA,MAAAM,EAAA,QAAAJ,EAAA,SAAAC,EAAA,SAAAE,MAAAE,EAAA,CAAA,KAAAD,EAAA,IAAAL,EAAA,CAAA,CAAA,EARF,cAqBAO,EAAAV"}