{"version":3,"file":"MessageBanner.stories-2d183417.js","sources":["../../../src/components/MessageBanner/MessageBanner.constants.ts","../../../src/components/MessageBanner/MessageBanner.styles.ts","../../../src/components/MessageBanner/MessageBanner.tsx"],"sourcesContent":["export const CLASS_IS_ACTIVE = 'is-active';\nexport const VARIANT_DEFAULT = 'info';\nexport const VARIANT_SUCCESS = 'success';\nexport const VARIANT_ERROR = 'error';\n","import { styled } from 'styled-components';\n\nimport Icon from '#components/Icon';\n\nimport * as device from '#theme/devices';\n\nimport {\n  CLASS_IS_ACTIVE,\n  VARIANT_DEFAULT,\n  VARIANT_ERROR,\n  VARIANT_SUCCESS,\n} from './MessageBanner.constants';\nimport { StyledIconProps, Variant } from './MessageBanner.types';\n\nimport tickIcon from '#icons/tick-round-solid-24.svg';\nimport warningIcon from '#icons/warning-solid-24.svg';\n\nconst svgMap = {\n  [VARIANT_DEFAULT]: null,\n  [VARIANT_ERROR]: warningIcon,\n  [VARIANT_SUCCESS]: tickIcon,\n};\n\nexport const Wrapper = styled.header.attrs({\n  role: 'alert',\n})<{ $variant: Variant }>`\n  --transition: 300ms ease-in-out;\n  --variant-color: ${({ theme, $variant }) => theme.color.semiotic[$variant]};\n  display: flex;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: ${({ theme }) => theme.zIndex.header};\n  width: 100%;\n  min-height: 56px;\n  box-sizing: border-box;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 10px;\n  padding: ${({ theme }) => theme.spacing.x1}px\n    ${({ theme }) => theme.spacing.x1_5}px;\n  border-bottom: 4px solid var(--variant-color);\n  background-color: ${({ theme }) => theme.color.canvas.base};\n  box-shadow: 0px 4px 4px ${({ theme }) => theme.color.shadow.base};\n  color: var(--variant-color);\n  font: bold 16px/20px ${({ theme }) => theme.fontFamily.secondaryFont};\n  opacity: 0;\n  transform: translateY(-100%);\n  transition:\n    transform var(--transition),\n    opacity var(--transition);\n\n  @media ${device.tablet} {\n    justify-content: center;\n  }\n\n  @media ${device.laptop} {\n    min-height: 72px;\n    font-size: 20px;\n    line-height: 24px;\n  }\n\n  &.${CLASS_IS_ACTIVE} {\n    opacity: 1;\n    transform: translateY(0%);\n  }\n`;\n\nexport const StyledIcon = styled(Icon).attrs<StyledIconProps>(\n  ({ $variant }) => ({\n    svg: svgMap[$variant],\n  }),\n)`\n  flex-shrink: 0;\n  color: var(--variant-color);\n`;\n","import classnames from 'classnames';\nimport React, { useEffect, useState } from 'react';\n\nimport {\n  CLASS_IS_ACTIVE,\n  VARIANT_DEFAULT,\n  VARIANT_ERROR,\n  VARIANT_SUCCESS,\n} from './MessageBanner.constants';\nimport { StyledIcon, Wrapper } from './MessageBanner.styles';\nimport { Props } from './MessageBanner.types';\n\nconst MessageBannerBase: React.FC<Props> = ({\n  children,\n  messageTimeout = 8000,\n  className,\n  variant = VARIANT_DEFAULT,\n  ...rest\n}) => {\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    setIsActive(true);\n    const timeoutId = setTimeout(() => setIsActive(false), messageTimeout);\n    return () => clearTimeout(timeoutId);\n  }, [messageTimeout]);\n\n  return (\n    <Wrapper\n      {...rest}\n      className={classnames(className, { [CLASS_IS_ACTIVE]: isActive })}\n      $variant={variant}\n    >\n      {[VARIANT_ERROR, VARIANT_SUCCESS].includes(variant) && (\n        <StyledIcon $variant={variant} />\n      )}\n      {children}\n    </Wrapper>\n  );\n};\n\nexport default MessageBannerBase;\n\nexport const MessageBannerError: React.FC<Props> = ({ children, ...rest }) => (\n  <MessageBannerBase variant={VARIANT_ERROR} {...rest}>\n    {children}\n  </MessageBannerBase>\n);\n\nexport const MessageBannerSuccess: React.FC<Props> = ({\n  children,\n  ...rest\n}) => (\n  <MessageBannerBase variant={VARIANT_SUCCESS} {...rest}>\n    {children}\n  </MessageBannerBase>\n);\n"],"names":["CLASS_IS_ACTIVE","VARIANT_DEFAULT","VARIANT_SUCCESS","VARIANT_ERROR","svgMap","warningIcon","tickIcon","Wrapper","styled","header","attrs","role","withConfig","componentId","theme","$variant","color","semiotic","zIndex","spacing","x1","x1_5","canvas","base","shadow","fontFamily","secondaryFont","device","StyledIcon","Icon","svg","MessageBannerBase","__name","children","className","isActive","setIsActive","useState","useEffect","timeoutId","messageTimeout","jsxs","rest","classnames","variant","jsx","MessageBannerError","MessageBannerSuccess"],"mappings":"qnBAAO,MAAMA,EAAkB,YAClBC,EAAkB,OAClBC,EAAkB,UAClBC,EAAgB,QCcvBC,EAAS,CACb,CAACH,CAAe,EAAG,KACnB,CAACE,CAAa,EAAGE,EACjB,CAACH,CAAe,EAAGI,CACrB,EAEaC,EAAUC,EAAOC,OAAOC,MAAM,CACzCC,KAAM,OACR,CAAC,EAACC,WAAA,CAAAC,YAAA,aAAA,CAAA,EAAA,CAAA,kDAAA,qDAAA,oHAAA,MAAA,oEAAA,2BAAA,mDAAA,kHAAA,mCAAA,uDAAA,uCAAA,EAEmB,CAAC,CAAEC,MAAAA,EAAOC,SAAAA,CAAS,IAAMD,EAAME,MAAMC,SAASF,CAAQ,EAK9D,CAAC,CAAED,MAAAA,CAAM,IAAMA,EAAMI,OAAOT,OAO5B,CAAC,CAAEK,MAAAA,CAAM,IAAMA,EAAMK,QAAQC,GACpC,CAAC,CAAEN,MAAAA,CAAM,IAAMA,EAAMK,QAAQE,KAEb,CAAC,CAAEP,MAAAA,CAAM,IAAMA,EAAME,MAAMM,OAAOC,KAC5B,CAAC,CAAET,MAAAA,CAAM,IAAMA,EAAME,MAAMQ,OAAOD,KAErC,CAAC,CAAET,MAAAA,CAAM,IAAMA,EAAMW,WAAWC,cAO9CC,EAIAA,EAML3B,CAAe,EAMR4B,EAAapB,EAAOqB,CAAI,EAAEnB,MACrC,CAAC,CAAEK,SAAAA,CAAS,KAAO,CACjBe,IAAK1B,EAAOW,CAAQ,CACtB,EACF,EAACH,WAAA,CAAAC,YAAA,aAAA,CAGA,EAAA,CAAA,2CAAA,CAAA,EC/DDkB,EAAAC,EAAA,CAAA,CAA4C,SAAAC,EAC1CA,eAAAA,EAAAA,IACiB,UAAAC,EACjBA,QAAAA,EAAAA,EACUjC,GAAAA,CAEZ,IAAA,CACE,KAAA,CAAAkC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EAEAC,OAAAA,EAAAA,UAAAA,IAAAA,CACEF,EAAAA,EAAAA,EACA,MAAAG,EAAA,WAAA,IAAAH,EAAA,EAAA,EAAAI,CAAA,EACA,MAAA,IAAA,aAAAD,CAAA,CAAmC,EAAA,CAAAC,CAAA,CAAA,EAGrCC,EAAAA,KAAAlC,EAAA,CAAA,GAAAmC,EAAA,UAAAC,EAAAT,EAAA,CAGqC,CAAAlC,CAAA,EAAAmC,CAAqBA,CAAAA,EAAAA,SAAAA,EAAAA,SAAAA,CAGrD,CAAAhC,EAAAD,CAAA,EAAA,SAAA0C,CAAA,GAAAC,EAAA,IAAAjB,EAAA,CAAA,SAAAgB,EAAA,EAEAX,CACAA,CAAAA,CAAAA,CAGP,EA3BA,qBA+BOa,EAAAd,EAAA,CAAA,CAA6C,SAAAC,EAAEA,GAAAA,CAAkB,IAAAY,EAAA,IAAAd,EAAA,CAAA,QAAA5B,EAAA,GAAAuC,EAAA,SAAAT,CAAA,CAAA,EAAjE,sBAMAc,EAAAf,EAAA,CAAA,CAA+C,SAAAC,EACpDA,GAAAA,CAEF,IAAAY,EAAA,IAAAd,EAAA,CAAA,QAAA7B,EAAA,GAAAwC,EAAA,SAAAT,CAAA,CAAA,EAHO;;;;;;;;"}