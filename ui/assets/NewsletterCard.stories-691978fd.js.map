{"version":3,"file":"NewsletterCard.stories-691978fd.js","sources":["../../../src/utils/isTouchDevice.ts","../../../src/components/NewsletterCard/Base/NewsletterCard.constants.ts","../../../src/components/NewsletterCard/Base/NewsletterCard.styles.tsx","../../../src/components/NewsletterCard/Base/NewsletterCard.helpers.ts","../../../src/components/NewsletterCard/Base/NewsletterCard.tsx","../../../src/components/NewsletterCard/Premium/NewsletterCardPremium.styles.ts","../../../src/components/NewsletterCard/Premium/NewsletterCardPremium.tsx","../../../src/components/NewsletterCard/WithState/NewsletterCardWithState.tsx","../../../src/components/NewsletterCard/WithState/NewsletterCardPremiumWithState.tsx"],"sourcesContent":["export default () => {\n  try {\n    return window.matchMedia('(pointer: coarse)').matches;\n  } catch (error) {\n    // rendering on server\n    return false;\n  }\n};\n","export const CLASS_IS_SUBSCRIBED = 'is-subscribed';\n","import { styled } from 'styled-components';\n\nimport Icon from '#components/Icon';\nimport ImageComp from '#components/Image';\n\nimport * as device from '#theme/devices';\n\nimport { CLASS_IS_SUBSCRIBED } from './NewsletterCard.constants';\nimport { NewsletterCardImageProps } from './NewsletterCard.types';\n\nimport PlusRoundOutline24SVG from '#icons/plus-round-outline-24.svg';\nimport PlusRoundSolid24SVG from '#icons/plus-round-solid-24.svg';\nimport TickRoundSolid24SVG from '#icons/tick-round-solid-24.svg';\n\nconst IMAGE_APPEARING_BREAKPOINT = '360px';\n\nexport const Wrapper = styled.div`\n  --spacing: ${({ theme }) => theme.spacing.x0_5}px;\n  --success-color: ${({ theme }) => theme.color.semiotic.success};\n  position: relative;\n\n  * {\n    box-sizing: border-box;\n  }\n\n  @media ${device.tablet} {\n    --spacing: ${({ theme }) => theme.spacing.x1}px;\n  }\n`;\n\nexport const Label = styled.label<{ htmlFor: string }>`\n  --padding-mobile: ${({ theme }) => theme.spacing.x1}px;\n  display: flex;\n  overflow: hidden;\n  width: 100%;\n  flex-direction: column;\n  border-radius: 4px;\n\n  /** @todo switch to color.canvas.card once ThemeProvider is in place */\n  background-color: ${({ theme }) => theme.color.canvas.base};\n  box-shadow: 2px 2px 8px 0px ${({ theme }) => theme.color.shadow.base};\n  cursor: pointer;\n\n  &.${CLASS_IS_SUBSCRIBED} {\n    box-shadow: none;\n    outline: 3px solid var(--success-color);\n  }\n\n  @media (min-width: ${IMAGE_APPEARING_BREAKPOINT}) {\n    flex-direction: row;\n  }\n\n  @media ${device.tablet} {\n    height: 100%;\n    flex-direction: column;\n  }\n`;\n\nconst ImageWrapper = styled.div`\n  display: none;\n\n  @media (min-width: ${IMAGE_APPEARING_BREAKPOINT}) {\n    display: block;\n    width: 60px;\n    flex-shrink: 0;\n  }\n\n  @media ${device.tablet} {\n    width: 100%;\n    height: 97px;\n  }\n`;\n\nconst StyledImage = styled(ImageComp)`\n  display: block;\n  object-fit: cover;\n`;\n\nexport const Image = ({ className, ...rest }: NewsletterCardImageProps) => (\n  <ImageWrapper className={className}>\n    <StyledImage {...rest} />\n  </ImageWrapper>\n);\n\nexport const ImageMobile = styled(Image)`\n  @media ${device.tablet} {\n    display: none;\n  }\n`;\n\nexport const ImageTablet = styled(Image)`\n  display: none;\n\n  @media ${device.tablet} {\n    display: block;\n  }\n`;\n\nexport const ContentWithoutImage = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  padding: var(--padding-mobile) 40px var(--padding-mobile)\n    var(--padding-mobile);\n\n  @media ${device.tablet} {\n    height: 100%;\n    padding: var(--spacing);\n  }\n`;\n\nexport const Frequency = styled.span`\n  --line-height: 16px;\n  display: block;\n  margin-bottom: var(--spacing);\n  font: 12px / var(--line-height)\n    ${({ theme }) => theme.fontFamily.secondaryFont};\n\n  @media ${device.tablet} {\n    min-height: var(--line-height);\n  }\n`;\n\nexport const Title = styled.h3.attrs({ role: 'presentation' })`\n  --line-height: 24px;\n  margin: 0 0 var(--spacing);\n  font-family: ${({ theme }) => theme.fontFamily.primaryFont};\n  font-size: 20px;\n  font-weight: bold;\n  letter-spacing: -0.025em;\n  line-height: var(--line-height);\n\n  @media ${device.tablet} {\n    min-height: calc(var(--line-height) * 2);\n  }\n`;\n\nexport const Description = styled.p.attrs({ role: 'presentation' })`\n  margin: 0;\n  color: ${({ theme }) => theme.color.ink.base};\n  font: 16px/20px ${({ theme }) => theme.fontFamily.secondaryFont};\n\n  @media ${device.tablet} {\n    padding-top: var(--spacing);\n    margin-bottom: var(--spacing);\n    border-top: 1px solid ${({ theme }) => theme.color.divider.light};\n  }\n`;\n\nexport const DescriptionMobile = styled(Description)`\n  @media ${device.tablet} {\n    display: none;\n  }\n`;\n\nexport const DescriptionTablet = styled(Description)`\n  display: none;\n\n  @media ${device.tablet} {\n    display: block;\n  }\n`;\n\ntype CheckboxProps = {\n  id: string;\n  value: string;\n};\n\nexport const Checkbox = styled.input.attrs({\n  type: 'checkbox',\n  name: 'newsletter',\n})<CheckboxProps>`\n  position: absolute;\n  right: 0;\n  bottom: 0;\n  opacity: 0;\n  outline: none;\n\n  &:focus + ${Label} {\n    outline: 3px solid ${({ theme }) => theme.color.semiotic.info};\n  }\n`;\n\nexport const CheckboxToggleWrapper = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  align-items: center;\n  justify-content: space-between;\n  margin-top: auto;\n`;\n\nexport const CheckboxToggle = styled.span.attrs({ 'aria-hidden': true })`\n  --size: ${({ theme }) => theme.dimension.icon.base.width};\n  display: grid;\n  position: absolute;\n  top: 50%;\n  right: var(--padding-mobile);\n  width: var(--size);\n  height: var(--size);\n  place-content: center;\n  pointer-events: none;\n  transform: translateY(-50%);\n\n  @media ${device.tablet} {\n    position: static;\n    align-self: flex-end;\n    transform: none;\n  }\n`;\n\nconst StyledAddCircleIcon = styled(Icon)`\n  color: ${({ theme }) => theme.color.semiotic.inactive};\n`;\n\nexport const AddCircleIcon = () => (\n  <StyledAddCircleIcon svg={PlusRoundOutline24SVG} />\n);\n\nconst StyledAddCircleIconSolidBg = styled(Icon)`\n  color: ${({ theme }) => theme.color.semiotic.info};\n`;\n\nexport const AddCircleIconSolidBg = () => (\n  <StyledAddCircleIconSolidBg svg={PlusRoundSolid24SVG} />\n);\n\nconst StyledTickIcon = styled(Icon)`\n  color: ${({ theme }) => theme.color.semiotic.success};\n`;\n\nexport const TickIcon = () => <StyledTickIcon svg={TickRoundSolid24SVG} />;\n","import { AddCircleIcon, TickIcon } from './NewsletterCard.styles';\n\nexport const determineActiveIcon = (isSubscribed: boolean) =>\n  isSubscribed ? TickIcon : AddCircleIcon;\n","import React, {\n  useEffect,\n  useState,\n  useRef,\n  MouseEvent,\n  ChangeEvent,\n  FocusEvent,\n  FC,\n  KeyboardEvent,\n} from 'react';\n\nimport isTouchDevice from '#utils/isTouchDevice';\n\nimport { CLASS_IS_SUBSCRIBED } from './NewsletterCard.constants';\nimport { determineActiveIcon } from './NewsletterCard.helpers';\nimport {\n  Checkbox,\n  CheckboxToggle,\n  Frequency,\n  Label,\n  AddCircleIcon,\n  AddCircleIconSolidBg,\n  TickIcon,\n  Title,\n  Wrapper,\n  CheckboxToggleWrapper,\n  ContentWithoutImage,\n  DescriptionMobile,\n  DescriptionTablet,\n  ImageMobile,\n  ImageTablet,\n} from './NewsletterCard.styles';\nimport NewsletterCardProps from './NewsletterCard.types';\n\nconst isTouchMobileDevice = isTouchDevice();\n\nconst NewsletterCard: FC<NewsletterCardProps> = ({\n  newsletterKey,\n  title,\n  frequency,\n  descriptionShort,\n  descriptionLong = descriptionShort,\n  imageMobileSrc,\n  imageTabletSrc = imageMobileSrc,\n  isSubscribed,\n  onSubscribeStatusChange,\n  children,\n  className,\n  tabIndex,\n  onEnterKeyPress,\n}) => {\n  const [activeIcon, setActiveIcon] = useState(() => {\n    const Icon = determineActiveIcon(isSubscribed);\n    return <Icon />;\n  });\n  const isOnMount = useRef(true);\n  const handleKeyDownPress = (evt: KeyboardEvent<HTMLDivElement>) => {\n    if (evt.key === 'Enter' && onEnterKeyPress) {\n      onEnterKeyPress(newsletterKey, !isSubscribed);\n    }\n  };\n  const handleActiveIconChange = (evtType: string) => {\n    const isFocusEvt = evtType === 'focus';\n    // hide icon change on tap on touch devices\n    if (isFocusEvt && (isTouchMobileDevice || isSubscribed)) {\n      return;\n    }\n    if (['blur', 'mouseleave'].includes(evtType) && isSubscribed) {\n      setActiveIcon(<TickIcon />);\n      return;\n    }\n    const TargetActivePlusIcon =\n      isFocusEvt || evtType === 'mouseover'\n        ? AddCircleIconSolidBg\n        : AddCircleIcon;\n    setActiveIcon(<TargetActivePlusIcon />);\n  };\n\n  useEffect(() => {\n    if (isOnMount.current) {\n      isOnMount.current = false;\n      return;\n    }\n\n    const Icon = determineActiveIcon(isSubscribed);\n    setActiveIcon(<Icon />);\n  }, [isSubscribed]);\n\n  return (\n    <Wrapper\n      className={className}\n      onKeyDown={handleKeyDownPress}\n      onMouseOver={(evt: MouseEvent) => handleActiveIconChange(evt.type)}\n      onMouseLeave={(evt: MouseEvent) => handleActiveIconChange(evt.type)}\n    >\n      <Checkbox\n        id={newsletterKey}\n        value={newsletterKey}\n        checked={isSubscribed}\n        onChange={(evt: ChangeEvent<HTMLInputElement>) =>\n          onSubscribeStatusChange(newsletterKey, evt.target.checked)\n        }\n        tabIndex={tabIndex}\n        onFocus={(evt: FocusEvent) => handleActiveIconChange(evt.type)}\n        onBlur={(evt: FocusEvent) => handleActiveIconChange(evt.type)}\n      />\n      <Label\n        htmlFor={newsletterKey}\n        {...(isSubscribed && { className: CLASS_IS_SUBSCRIBED })}\n      >\n        <ImageMobile src={imageMobileSrc} alt=\"\" />\n        <ImageTablet src={imageTabletSrc} alt=\"\" />\n        <ContentWithoutImage>\n          <Frequency>{frequency}</Frequency>\n          <Title>{title}</Title>\n          <DescriptionMobile>{descriptionShort}</DescriptionMobile>\n          <DescriptionTablet>{descriptionLong}</DescriptionTablet>\n          <CheckboxToggleWrapper>\n            {children}\n            <CheckboxToggle>{activeIcon}</CheckboxToggle>\n          </CheckboxToggleWrapper>\n        </ContentWithoutImage>\n      </Label>\n    </Wrapper>\n  );\n};\n\nexport default NewsletterCard;\n","import { styled } from 'styled-components';\n\nimport Capsule from '#components/Capsule';\nimport PremiumBadge from '#components/PremiumBadge';\n\nimport * as device from '#theme/devices';\n\nimport NewsletterCard, { CheckboxToggleWrapper, Label } from '../Base';\n\nexport const Wrapper = styled(NewsletterCard)`\n  ${Label} {\n    border-radius: 2px;\n    background-color: ${({ theme }) => theme.color.canvas.card};\n  }\n\n  ${CheckboxToggleWrapper} {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledCapsule = styled(Capsule)`\n  position: absolute;\n  top: 0;\n  right: ${({ theme }) => theme.spacing.x1}px;\n  transform: translateY(-50%);\n  white-space: nowrap;\n\n  @media ${device.tablet} {\n    right: 50%;\n    transform: translate(50%, -50%);\n  }\n`;\n\nexport const StyledPremiumBadge = styled(PremiumBadge)`\n  @media ${device.maxTablet} {\n    margin-top: var(--spacing);\n  }\n`;\n","import NewsletterCardProps from '../Base/NewsletterCard.types';\n\nimport {\n  StyledCapsule,\n  StyledPremiumBadge,\n  Wrapper,\n} from './NewsletterCardPremium.styles';\n\nconst NewsletterCardPremium = (props: NewsletterCardProps) => (\n  <Wrapper {...props}>\n    <StyledPremiumBadge />\n    <StyledCapsule>Subscriber exclusive</StyledCapsule>\n  </Wrapper>\n);\n\nexport default NewsletterCardPremium;\n","import React, { useState } from 'react';\n\nimport NewsletterCard from '../Base/NewsletterCard';\nimport { OnSubscribeStatusChange } from '../Base/NewsletterCard.types';\n\nimport NewsletterCardWithStateProps from './NewsletterCardWithState.types';\n\nconst NewsletterCardWithState: React.FC<NewsletterCardWithStateProps> = ({\n  NewsletterCardComponent = NewsletterCard,\n  isSubscribed: subscribed,\n  ...rest\n}) => {\n  const [isSubscribed, setIsSubscribed] = useState(subscribed);\n  const handleOnChange: OnSubscribeStatusChange = (\n    _newsletterKey,\n    subscribedStatus,\n  ) => setIsSubscribed(subscribedStatus);\n\n  return (\n    <NewsletterCardComponent\n      {...{\n        ...rest,\n        isSubscribed,\n        onSubscribeStatusChange: handleOnChange,\n        onEnterKeyPress: handleOnChange,\n      }}\n    />\n  );\n};\n\nexport default NewsletterCardWithState;\n","import React from 'react';\n\nimport NewsletterCardPremium from '../Premium/NewsletterCardPremium';\n\nimport NewsletterCardWithState from './NewsletterCardWithState';\nimport NewsletterCardWithStateProps from './NewsletterCardWithState.types';\n\nconst NewsletterCardPremiumWithState: React.FC<NewsletterCardWithStateProps> = (\n  props,\n) => (\n  <NewsletterCardWithState\n    {...props}\n    NewsletterCardComponent={NewsletterCardPremium}\n  />\n);\n\nexport default NewsletterCardPremiumWithState;\n"],"names":["isTouchDevice","__name","window","matchMedia","matches","CLASS_IS_SUBSCRIBED","IMAGE_APPEARING_BREAKPOINT","Wrapper","styled","theme","device.tablet","Label","ImageWrapper","StyledImage","ImageComp","Image","className","jsx","rest","ImageMobile","ImageTablet","ContentWithoutImage","Frequency","Title","Description","DescriptionMobile","DescriptionTablet","Checkbox","CheckboxToggleWrapper","CheckboxToggle","StyledAddCircleIcon","Icon","AddCircleIcon","PlusRoundOutline24SVG","StyledAddCircleIconSolidBg","AddCircleIconSolidBg","PlusRoundSolid24SVG","StyledTickIcon","TickIcon","TickRoundSolid24SVG","determineActiveIcon","isSubscribed","isTouchMobileDevice","NewsletterCard","newsletterKey","title","frequency","descriptionShort","imageMobileSrc","onSubscribeStatusChange","children","tabIndex","activeIcon","setActiveIcon","useState","isOnMount","useRef","handleKeyDownPress","evt","onEnterKeyPress","handleActiveIconChange","evtType","isFocusEvt","TargetActivePlusIcon","useEffect","jsxs","imageTabletSrc","descriptionLong","NewsletterCard$1","withConfig","componentId","color","canvas","card","StyledCapsule","Capsule","spacing","x1","device","StyledPremiumBadge","PremiumBadge","NewsletterCardPremium","props","NewsletterCardWithState","NewsletterCardComponent","subscribed","setIsSubscribed","handleOnChange","_newsletterKey","subscribedStatus","NewsletterCardPremiumWithState"],"mappings":"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"}