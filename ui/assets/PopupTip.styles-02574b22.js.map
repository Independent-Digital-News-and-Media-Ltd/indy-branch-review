{"version":3,"file":"PopupTip.styles-02574b22.js","sources":["../../../src/components/PopupTip/PopupTip.constants.ts","../../../src/components/PopupTip/PopupTip.helpers.ts","../../../src/components/PopupTip/PopupTip.styles.ts"],"sourcesContent":["/*  min distance between edge of viewport and popupTip on any side  */\nexport const MARGIN = 10;\n\n/*  distance between body and trigger */\nexport const GAP = 12;\n\n/*  height of arrow  */\nexport const ARROW_HEIGHT = 10;\n\n/*  width of arrow */\nexport const ARROW_WIDTH = 12;\n\n/*  class designating that text box should be shown above trigger */\nexport const ABOVE = 'above';\n\n/*  class designating that text box should be shown below trigger */\nexport const BELOW = 'below';\n\n/*  class designating that text box is open */\nexport const OPEN = 'open';\n","import { RefObject } from 'react';\n\nimport { MARGIN, GAP, ABOVE, BELOW, OPEN } from './PopupTip.constants';\n\nexport function calculateTriggerClass(show: boolean, orientation: string) {\n  if (show) {\n    if (orientation === ABOVE) {\n      return `${OPEN} ${ABOVE}`;\n    }\n\n    return `${OPEN} ${BELOW}`;\n  }\n\n  return '';\n}\n\ntype PositionAndOrientation = [number, number, string];\n\nexport const calculatePosition = (\n  triggerRect: DOMRect,\n  bodyRect: DOMRect,\n  viewportWidth: number,\n  viewportHeight: number,\n): PositionAndOrientation => {\n  const triggerRectTop = triggerRect.top;\n  const triggerRectRight = triggerRect.right;\n  const triggerRectLeft = triggerRect.left;\n\n  const triggerRectWidth = triggerRect.width;\n  const triggerRectHeight = triggerRect.height;\n\n  const bodyRectWidth = bodyRect.width;\n  const bodyRectHeight = bodyRect.height;\n\n  let top: number;\n  let orientation: string;\n\n  const idealOffset = (bodyRectWidth - triggerRectWidth) / 2;\n  const maxLeftOffset = triggerRectLeft - MARGIN;\n  const maxRightOffset = viewportWidth - MARGIN - triggerRectRight;\n\n  let offset = idealOffset;\n\n  if (idealOffset > maxLeftOffset) {\n    offset = maxLeftOffset;\n  }\n\n  if (idealOffset > maxRightOffset) {\n    offset = offset + (idealOffset - maxRightOffset);\n  }\n\n  const maxLowerSpace = viewportHeight - triggerRectTop - MARGIN;\n  const popupTipHeight = triggerRectHeight + GAP + bodyRectHeight;\n\n  if (popupTipHeight > maxLowerSpace) {\n    //  ABOVE\n    orientation = ABOVE;\n    top = -1 * (bodyRectHeight + GAP);\n  } else {\n    //  BELOW\n    orientation = BELOW;\n    top = triggerRectHeight + GAP;\n  }\n\n  const left = -1 * offset;\n\n  return [left, top, orientation];\n};\n\nexport const NULL_DOM_RECT = {\n  top: 0,\n  bottom: 0,\n  left: 0,\n  right: 0,\n  width: 0,\n  height: 0,\n};\n\nexport function getBB(ref: RefObject<Element>) {\n  if (ref.current !== null) {\n    return ref.current.getBoundingClientRect();\n  }\n\n  return NULL_DOM_RECT as DOMRect;\n}\n","import { styled } from 'styled-components';\n\nimport Icon from '#components/Icon';\n\nimport { ABOVE, BELOW, OPEN } from './PopupTip.constants';\n\ntype TriggerProps = {\n  $gap: number;\n  $arrowheight: number;\n  $arrowwidth: number;\n  // width and height\n  $triggerwidth: number;\n};\n\nexport const StyledIcon = styled(Icon)``;\n\nexport const Wrapper = styled.div`\n  position: relative;\n  --tooltip-color: ${({ theme }) => theme.color.dark.canvas.card};\n`;\n\n/**\n * @todo replace with IconButton\n */\nexport const Trigger = styled.div<TriggerProps>`\n  display: flex;\n  position: relative;\n  width: ${({ $triggerwidth }) => $triggerwidth}px;\n  height: ${({ $triggerwidth }) => $triggerwidth}px;\n  align-items: center;\n  justify-content: space-around;\n  cursor: pointer;\n\n  &::after {\n    position: absolute;\n\n    /* recommended by WCAG */\n    top: 50%;\n    left: 50%;\n    width: 44px;\n    height: 44px;\n    background: transparent;\n    content: '';\n    transform: translate(-50%, -50%);\n  }\n\n  &::before {\n    position: absolute;\n    left: 50%;\n    z-index: 101;\n    box-sizing: border-box;\n    border-right: solid ${({ $arrowwidth }) => $arrowwidth / 2}px transparent;\n    border-left: solid ${({ $arrowwidth }) => $arrowwidth / 2}px transparent;\n    content: none;\n    transform: translateX(-50%);\n  }\n\n  &.${OPEN}, &:hover {\n    color: ${({ theme }) => theme.color.actionBlack.alt};\n  }\n\n  &.${OPEN}::before {\n    content: '';\n  }\n\n  /* text box below */\n  &.${BELOW}::before {\n    /* nudge by 1px to fix gap bug */\n    top: calc(\n      100% + ${({ $gap }) => $gap}px - ${({ $arrowheight }) => $arrowheight}px\n    );\n    border-top: solid 0 transparent;\n    border-bottom: solid ${({ $arrowheight }) => $arrowheight + 1}px\n      var(--tooltip-color);\n  }\n\n  /* text box above */\n  &.${ABOVE}::before {\n    top: -${({ $gap }) => $gap}px;\n    border-top: solid ${({ $arrowheight }) => $arrowheight}px\n      var(--tooltip-color);\n    border-bottom: solid 0 transparent;\n  }\n`;\n\nexport const Body = styled.div`\n  position: absolute;\n  z-index: 100;\n  width: 160px;\n  max-width: 50vw;\n  box-sizing: border-box;\n  padding: ${({ theme }) => theme.spacing.x1}px;\n  border-radius: 6px;\n  background-color: var(--tooltip-color);\n  box-shadow: 1px 2px 4px 0px ${({ theme }) => theme.color.veil.base};\n  color: ${({ theme }) => theme.color.ink.inverted};\n  font: normal 14px / 18px ${({ theme }) => theme.fontFamily.secondaryFont};\n`;\n"],"names":["MARGIN","GAP","ARROW_HEIGHT","ARROW_WIDTH","ABOVE","BELOW","OPEN","calculateTriggerClass","show","orientation","calculatePosition","triggerRect","bodyRect","viewportWidth","viewportHeight","triggerRectTop","top","triggerRectRight","right","triggerRectLeft","left","triggerRectWidth","width","triggerRectHeight","height","bodyRectWidth","bodyRectHeight","idealOffset","maxLeftOffset","maxRightOffset","offset","maxLowerSpace","NULL_DOM_RECT","bottom","getBB","ref","current","getBoundingClientRect","StyledIcon","styled","Icon","withConfig","componentId","Wrapper","div","theme","color","dark","canvas","card","Trigger","$triggerwidth","$arrowwidth","actionBlack","alt","$gap","$arrowheight","Body","spacing","x1","veil","base","ink","inverted","fontFamily","secondaryFont"],"mappings":"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"}