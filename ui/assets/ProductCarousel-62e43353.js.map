{"version":3,"file":"ProductCarousel-62e43353.js","sources":["../../../src/decorators/PageContext.tsx","../../../src/components/ProductCarouselCard/LazyProductCarouselCard.tsx","../../../src/components/ProductCarousel/ProductCarousel.styles.ts","../../../src/components/ProductCarousel/ProductCarouselSlide.tsx","../../../src/components/ProductCarousel/Title/Title.styles.ts","../../../src/components/ProductCarousel/Title/Title.tsx","../../../src/components/ProductCarousel/ProductCarousel.tsx"],"sourcesContent":["/**\n * @explain\n * mocks the PageState context\n * specifically for ProductComparison at the moment, so requires to be extended for other components\n */\n\nimport { FC, createContext, useState } from 'react';\n\nimport {\n  PageState,\n  Dispatchers,\n  LivePrice,\n  LivePriceItem,\n  ContextState,\n} from '#types/PageContext';\n\nconst calculateSelectedItems = (selectedItems: string[], id: string) => {\n  if (selectedItems.includes(id)) {\n    return selectedItems.filter((itemId) => itemId !== id);\n  } else {\n    return [...selectedItems, id];\n  }\n};\n\nconst initialState: PageState = {\n  defaultState: {\n    bookmarkModalOpen: false,\n    drawerLoginOpen: false,\n    galleryIndex: 0,\n    drawerMenuOpen: false,\n    galleryOpen: false,\n    returnFocus: '',\n  },\n  productComparison: {\n    selectedItems: [],\n    showModal: false,\n  },\n  productPrices: [] as LivePrice[],\n};\n\nconst initialDispatchers: Dispatchers = {\n  /* Bookmark */\n  closeBookmarkModal: () => {},\n  toggleBookmarkModal: () => {},\n\n  /* Drawer */\n  closeDrawerLogin: () => {},\n  closeDrawerMenu: () => {},\n  toggleDrawerLoginOpen: () => {},\n  toggleDrawerMenuOpen: () => {},\n\n  /* Gallery */\n  toggleGalleryOpen: () => {},\n\n  /* Price Comparison */\n  clickPriceComparisonBuyNow: () => {},\n\n  /* Product Carousel */\n  setProductCarouselIsLoaded: () => {},\n  clickProductCarouselBuyNow: () => {},\n  clickProductCarouselReadReview: () => {},\n\n  /* Product Comparison */\n  clearProductSelection: () => {},\n  hideProductModal: () => {},\n  showProductModal: () => {},\n  toggleSelectedProduct: () => {},\n  clickProductComparisonBuyNow: () => {},\n  clickProductComparisonReadReview: () => {},\n\n  /* Product Price */\n  setProductPrices: () => {},\n  productPriceFetchError: () => {},\n  setProductPricesIsLoading: () => {},\n};\n\nexport const PageContext = createContext({\n  ...initialState,\n  dispatchers: initialDispatchers,\n});\n\nexport const PageContextDecorator = (Story: FC) => {\n  const [pageState, setPageState] = useState(initialState);\n\n  const productPriceFetchError = (id: string) => {\n    setPageState((state) => {\n      if (state.productPrices.find((productPrice) => productPrice.id === id)) {\n        return {\n          ...state,\n          productPrices: state.productPrices.map((productPrice) => {\n            if (productPrice.id === id) {\n              return {\n                ...productPrice,\n                isLoading: false,\n                isFetched: false,\n                isError: true,\n              };\n            }\n\n            return productPrice;\n          }),\n        };\n      }\n\n      return state;\n    });\n  };\n\n  const setProductPricesIsLoading = (id: string) => {\n    setPageState((state) => {\n      if (state.productPrices.find((productPrice) => productPrice.id === id)) {\n        return {\n          ...state,\n          productPrices: state.productPrices.map((productPrice) => {\n            if (productPrice.id === id) {\n              return {\n                ...productPrice,\n                isLoading: true,\n              };\n            }\n\n            return productPrice;\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          productPrices: [\n            ...state.productPrices,\n            {\n              id,\n              prices: [],\n              isLoading: true,\n              isFetched: false,\n              isError: false,\n            },\n          ],\n        };\n      }\n    });\n  };\n\n  const setProductPrices = (id: string, prices: LivePriceItem[]) => {\n    setPageState((state) => {\n      if (state.productPrices.find((productPrice) => productPrice.id === id)) {\n        return {\n          ...state,\n          productPrices: state.productPrices.map((productPrice) => {\n            if (productPrice.id === id) {\n              return {\n                ...productPrice,\n                prices,\n              };\n            }\n\n            return productPrice;\n          }),\n        };\n      } else {\n        return {\n          ...state,\n          productPrices: [\n            ...state.productPrices,\n            {\n              id,\n              prices,\n              isLoading: false,\n              isFetched: true,\n              isError: false,\n            },\n          ],\n        };\n      }\n    });\n  };\n\n  const showProductModal = () => {\n    setPageState((state) => ({\n      ...state,\n      productComparison: {\n        ...state.productComparison,\n        showModal: true,\n      },\n    }));\n  };\n\n  const hideProductModal = () => {\n    setPageState((state) => ({\n      ...state,\n      productComparison: {\n        ...state.productComparison,\n        showModal: false,\n      },\n    }));\n  };\n\n  const toggleSelectedProduct = (id: string) => {\n    setPageState((state) => {\n      return {\n        ...state,\n        productComparison: {\n          ...state.productComparison,\n          selectedItems: calculateSelectedItems(\n            state.productComparison.selectedItems,\n            id,\n          ),\n        },\n      };\n    });\n  };\n\n  const clearProductSelection = () => {\n    setPageState((state) => ({\n      ...state,\n      productComparison: {\n        ...state.productComparison,\n        selectedItems: [],\n      },\n    }));\n  };\n\n  const contextState: ContextState = {\n    ...pageState,\n    dispatchers: {\n      ...initialDispatchers,\n      clearProductSelection,\n      hideProductModal,\n      setProductPrices,\n      productPriceFetchError,\n      setProductPricesIsLoading,\n      showProductModal,\n      toggleSelectedProduct,\n    },\n  };\n\n  return (\n    <div>\n      <PageContext.Provider value={contextState}>\n        <Story />\n      </PageContext.Provider>\n    </div>\n  );\n};\n","import { FC, useEffect } from 'react';\n\nimport { getPriceWithoutDecimals } from '#utils/currency';\n\nimport ProductCarouselCard from './ProductCarouselCard';\nimport { LazyProductCardProps } from './ProductCarouselCard.types';\n\nconst LazyProductCarouselCard: FC<LazyProductCardProps> = (props) => {\n  const { id, endpoint } = props.product;\n\n  const {\n    fetchPrice,\n    livePrice: { prices, isLoading, isFetched, isError },\n    isVisible,\n    product,\n    isComparison,\n    selectedItemIDs,\n    onToggleSelectedProduct,\n    onBuyNowClick,\n    onReadReviewClick,\n  } = props;\n\n  const { price, link } = prices.at(0) || {};\n\n  useEffect(() => {\n    if (isVisible && !isLoading && !isFetched && !isError) {\n      fetchPrice(id, endpoint);\n    }\n  }, [isVisible, endpoint, id, isLoading, isFetched, isError, fetchPrice]);\n\n  return (\n    <ProductCarouselCard\n      product={product}\n      isComparison={isComparison}\n      isLoading={isLoading}\n      price={getPriceWithoutDecimals(price || product.prettyPrice)}\n      selectedItemIDs={selectedItemIDs}\n      vendorLink={link || product.vendorLink}\n      onToggleSelectedProduct={onToggleSelectedProduct}\n      onBuyNowClick={onBuyNowClick}\n      onReadReviewClick={onReadReviewClick}\n    />\n  );\n};\n\nexport default LazyProductCarouselCard;\n","import { styled } from 'styled-components';\n\nimport Carousel, {\n  Group as CarouselGroup,\n  Nav as CarouselNav,\n} from '#components/Carousel';\nimport IconButton from '#components/IconButton';\n\nexport const Wrapper = styled.div`\n  --padding: ${({ theme }) => theme.spacing.x2}px;\n  --button-width: ${({ theme }) => theme.dimension.minTouchArea}px;\n  --title-bar-height: var(--button-width);\n  position: relative;\n  padding: 0 var(--padding) var(--padding);\n  background-color: ${({ theme }) => theme.color.canvas.secondary};\n`;\n\nexport const StyledCarousel = styled(Carousel)`\n  margin: 0 calc(var(--padding) * -1);\n\n  /*\n    We need to adjust the first and last items in the carousel to account for\n    the space around them\n  */\n  ${CarouselGroup} {\n    &:first-child {\n      padding-left: ${({ theme }) => theme.spacing.x1}px;\n    }\n\n    &:last-child {\n      padding-right: ${({ theme }) => theme.spacing.x1}px;\n    }\n  }\n\n  ${CarouselNav} {\n    position: absolute;\n    top: 0;\n    right: 0;\n    width: calc(var(--button-width) * 2);\n  }\n`;\n\nexport const Item = styled.div`\n  display: flex;\n  width: auto;\n  flex: 0 0 auto;\n  padding: 0 ${({ theme }) => theme.spacing.x1}px;\n  scroll-snap-align: start;\n`;\n\nexport const PrevButton = styled(IconButton)`\n  position: absolute;\n  top: 0;\n  left: 0;\n`;\n\nexport const NextButton = styled(IconButton)`\n  position: absolute;\n  top: 0;\n  right: 0;\n`;\n","import { forwardRef, ReactNode } from 'react';\n\nimport { Item } from './ProductCarousel.styles';\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst ProductCarouselSlide = forwardRef<HTMLDivElement, Props>(\n  function ProductCarouselSlide({ children }, ref) {\n    return <Item ref={ref}>{children}</Item>;\n  },\n);\n\nexport default ProductCarouselSlide;\n","import { styled } from 'styled-components';\n\nimport * as device from '#theme/devices';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: var(--title-bar-height);\n  align-items: center;\n  background: ${({ theme }) => theme.color.canvas.secondary};\n`;\n\nexport const TitleText = styled.div`\n  color: ${({ theme }) => theme.color.ink.base};\n  ${({ theme }) => theme.textStyle.tag.small.expanded}\n\n  @media ${device.tablet} {\n    ${({ theme }) => theme.textStyle.tag.base.expanded}\n  }\n\n  @media ${device.laptop} {\n    ${({ theme }) => theme.textStyle.tag.large.expanded}\n  }\n`;\n","import { FC } from 'react';\n\nimport { Wrapper, TitleText } from './Title.styles';\n\ntype Props = {\n  children: ReactNode;\n};\n\nconst Title: FC<Props> = ({ children }) => {\n  return (\n    <Wrapper>\n      <TitleText>{children}</TitleText>\n    </Wrapper>\n  );\n};\n\nexport default Title;\n","import { useCallback, FC } from 'react';\n\nimport { INITIAL_INDEX } from '#components/Carousel/Carousel.constants';\nimport { LazyProductCarouselCard } from '#components/ProductCarouselCard';\nimport {\n  Product,\n  BuyNowClickHandler,\n} from '#components/ProductComparisonCommon/types';\n\nimport {\n  NextButton,\n  PrevButton,\n  Wrapper,\n  StyledCarousel,\n} from './ProductCarousel.styles';\nimport {\n  ProductCarouselProps,\n  DefaultRenderSlideCallback,\n} from './ProductCarousel.types';\nimport ProductCarouselSlide from './ProductCarouselSlide';\nimport Title from './Title';\n\nimport ChevronLeftSVG from '#icons/chevron-left-solid-24.svg';\nimport ChevronRightSVG from '#icons/chevron-right-solid-24.svg';\n\ntype ButtonProps = {\n  disabled: boolean;\n  onClick: () => void;\n};\n\n/**\n * @explain\n * ButtonPrev and ButtonNext are used in render props for StyledCarousel.\n * This is because the underlying carousel tries not to be opinionated about\n * styling.\n */\n\nconst ButtonPrev: FC<ButtonProps> = ({ disabled, onClick }) => (\n  <PrevButton\n    svg={ChevronLeftSVG}\n    isDisabled={disabled}\n    size=\"large\"\n    onClick={onClick}\n  />\n);\n\nconst ButtonNext: FC<ButtonProps> = ({ disabled, onClick }) => (\n  <NextButton\n    svg={ChevronRightSVG}\n    isDisabled={disabled}\n    size=\"large\"\n    onClick={onClick}\n  />\n);\n\nconst ProductCarousel: FC<ProductCarouselProps> = ({\n  fetchPrice,\n  initialIndex = INITIAL_INDEX,\n  isComparison,\n  livePrices,\n  products,\n  selectedItemIDs = [],\n  title,\n  onToggleSelectedProduct,\n  onBuyNowClick,\n  onReadReviewClick,\n}) => {\n  // called from Carousel\n  const renderSlide = useCallback<DefaultRenderSlideCallback>(\n    (props) => {\n      const { itemIndex, slideIndex, item, isVisible, ref } = props;\n\n      // Define the click handler here so that we don't need to drill `itemIndex`\n      // down in to the ProductCarouselCard.\n      const handleBuyNowClick: BuyNowClickHandler = (\n        productId,\n        productName,\n        price,\n      ) => onBuyNowClick(productId, productName, price, itemIndex);\n\n      // cast necessary as Carousel doesn't use Typescript\n      const product = item as Product;\n\n      const defaultLivePrice = {\n        id: '',\n        prices: [],\n        isLoading: false,\n        isFetched: false,\n        isError: false,\n      };\n\n      const livePrice =\n        livePrices.find((livePrice) => livePrice.id === item.id) ||\n        defaultLivePrice;\n\n      return (\n        <ProductCarouselSlide key={`item-${slideIndex}`} ref={ref}>\n          <LazyProductCarouselCard\n            fetchPrice={fetchPrice}\n            isVisible={isVisible}\n            livePrice={livePrice}\n            isComparison={isComparison}\n            product={product}\n            selectedItemIDs={selectedItemIDs}\n            onToggleSelectedProduct={onToggleSelectedProduct}\n            onBuyNowClick={handleBuyNowClick}\n            onReadReviewClick={onReadReviewClick}\n          />\n        </ProductCarouselSlide>\n      );\n    },\n    [\n      selectedItemIDs,\n      livePrices,\n      fetchPrice,\n      isComparison,\n      onToggleSelectedProduct,\n      onBuyNowClick,\n      onReadReviewClick,\n    ],\n  );\n\n  // className is necessary as Carousel requires it and not possible to make property optional\n  return (\n    <Wrapper>\n      {title && <Title>{title}</Title>}\n\n      <StyledCarousel\n        className=\"\"\n        initialIndex={initialIndex}\n        ButtonPrev={ButtonPrev}\n        ButtonNext={ButtonNext}\n        increment={2}\n        items={products}\n        renderSlide={renderSlide}\n      />\n    </Wrapper>\n  );\n};\n\nexport default ProductCarousel;\n"],"names":["calculateSelectedItems","__name","selectedItems","id","itemId","initialState","initialDispatchers","PageContext","createContext","PageContextDecorator","Story","pageState","setPageState","useState","contextState","state","productComparison","clearProductSelection","hideProductModal","prices","productPrice","setProductPrices","productPriceFetchError","setProductPricesIsLoading","showProductModal","toggleSelectedProduct","jsx","LazyProductCarouselCard","props","endpoint","fetchPrice","isLoading","isFetched","isError","isVisible","product","isComparison","selectedItemIDs","onToggleSelectedProduct","onBuyNowClick","onReadReviewClick","price","link","useEffect","ProductCarouselCard","getPriceWithoutDecimals","Wrapper","styled","div","withConfig","componentId","theme","spacing","x2","dimension","minTouchArea","color","canvas","secondary","StyledCarousel","Carousel","CarouselGroup","x1","CarouselNav","Item","PrevButton","IconButton","NextButton","ProductCarouselSlide","forwardRef","children","ref","TitleText","ink","base","textStyle","tag","small","expanded","device","large","Title","ButtonPrev","disabled","ChevronLeftSVG","onClick","ButtonNext","ChevronRightSVG","ProductCarousel","INITIAL_INDEX","livePrices","products","title","renderSlide","useCallback","itemIndex","slideIndex","item","handleBuyNowClick","productId","productName","defaultLivePrice","livePrice","livePrice2","jsxs","initialIndex","ProductCarousel$1"],"mappings":"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"}