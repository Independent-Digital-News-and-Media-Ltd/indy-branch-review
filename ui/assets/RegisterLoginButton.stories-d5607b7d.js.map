{"version":3,"file":"RegisterLoginButton.stories-d5607b7d.js","sources":["../../../src/components/RegisterLoginButton/RegisterLoginButton.styles.tsx","../../../src/components/RegisterLoginButton/RegisterLoginButton.tsx"],"sourcesContent":["import { styled, css } from 'styled-components';\n\nimport Icon from '#components/Icon';\n\nimport { truncate } from '#theme/mixins';\n\nimport { WrapperProps, UserIconProps } from './RegisterLoginButton.types';\n\nimport UserSolid24 from '#icons/user-solid-24.svg';\n\n/**\n * The call to action button which sits alongside the main button\n */\nexport const CTA = styled.a`\n  display: flex;\n  align-items: center;\n  padding: 0 ${({ theme }) => theme.spacing.x1_5}px;\n  border-radius: 0;\n  background-color: ${({ theme }) => theme.color.actionBrand.base};\n  color: ${({ theme }) => theme.color.ink.inverted};\n  transition: ${({ theme }) => theme.transition.button};\n  ${({ theme }) => theme.textStyle.registerLoginButton.base};\n\n  &:hover,\n  &:active {\n    background: ${({ theme }) => theme.color.actionBrand.alt};\n    color: ${({ theme }) => theme.color.ink.inverted};\n  }\n`;\n\n/**\n * The main button which displays the users current status\n */\nexport const Button = styled.a`\n  display: flex;\n  min-width: 0;\n  box-sizing: border-box;\n  flex: 1 1 100%;\n  align-items: center;\n  gap: ${({ theme }) => theme.spacing.x1}px;\n  padding: 0 ${({ theme }) => theme.spacing.x1_5}px;\n  background-color: ${({ theme }) => theme.color.actionTransparent.base};\n  color: ${({ theme }) => theme.color.actionInvert.base};\n  transition: ${({ theme }) => theme.transition.button};\n  ${({ theme }) => theme.textStyle.registerLoginButton.base}\n\n  &:hover,\n  &:active {\n    background-color: ${({ theme }) => theme.color.actionTransparent.alt};\n    color: ${({ theme }) => theme.color.actionInvert.alt};\n  }\n`;\n\nexport const Wrapper = styled.div<WrapperProps>`\n  display: flex;\n  height: 100%;\n  align-items: stretch;\n\n  ${({ $isRegistered, $isSubscriber }) =>\n    $isRegistered || $isSubscriber\n      ? css`\n          ${Button} {\n            text-transform: capitalize;\n          }\n        `\n      : ''}\n\n  ${({ theme, $isSubscriber }) =>\n    $isSubscriber\n      ? css`\n          ${Button} {\n            color: ${theme.color.actionBrandInvert.base};\n\n            &:hover,\n            &:active {\n              color: ${theme.color.actionBrandInvert.alt};\n            }\n          }\n\n          ${CTA} {\n            background-color: ${theme.color.canvas.base};\n            color: ${theme.color.actionBrand.base};\n            ${theme.textStyle.registerLoginButton.link};\n\n            &:hover,\n            &:active {\n              background: ${theme.color.canvas.base};\n              color: ${theme.color.actionBrand.alt};\n            }\n          }\n        `\n      : ''}\n`;\n\nexport const UserIcon = styled(Icon).attrs({\n  svg: UserSolid24,\n  size: 'base',\n})<UserIconProps>`\n  flex-grow: 0;\n  flex-shrink: 0;\n`;\n\nexport const IconWrapper = styled.div`\n  --width: ${({ theme }) => theme.dimension.icon.large}px;\n  display: flex;\n  width: var(--width);\n  height: var(--width);\n  flex: 0 0 var(--width);\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Text = styled.span`\n  display: block;\n  ${truncate}\n`;\n\nexport const Label = styled(Text)``;\n\nexport const Status = styled(Text).attrs({ as: 'small' })`\n  margin-top: ${({ theme }) => theme.spacing.x0_5 * -1}px;\n  ${({ theme }) => theme.textStyle.registerLoginButton.status}\n`;\n","import { FC } from 'react';\nimport { ThemeProvider } from 'styled-components';\n\nimport { premium as premiumTheme } from '#theme/themes';\n\nimport {\n  Wrapper,\n  Button,\n  Label,\n  Status,\n  IconWrapper,\n  UserIcon,\n} from './RegisterLoginButton.styles';\nimport { RegisterLoginButtonProps } from './RegisterLoginButton.types';\n\n/**\n * A button which can be used to both prompt the user to log in and also display\n * their status once they are.\n */\nconst RegisterLoginButton: FC<RegisterLoginButtonProps> = ({\n  id,\n  href,\n  status,\n  isSubscriber = false,\n  isRegistered = false,\n  cta,\n  children,\n  ...rest\n}) => {\n  const button = (\n    <Wrapper\n      {...rest}\n      $isRegistered={isRegistered}\n      $isSubscriber={isSubscriber}\n    >\n      <Button id={id} href={href}>\n        <IconWrapper>\n          <UserIcon />\n        </IconWrapper>\n        <Label>\n          {children}\n          {status && <Status>{status}</Status>}\n        </Label>\n      </Button>\n      {(isSubscriber || isRegistered) && cta}\n    </Wrapper>\n  );\n\n  if (isSubscriber || isRegistered) {\n    return <ThemeProvider theme={{ ...premiumTheme }}>{button}</ThemeProvider>;\n  }\n\n  return button;\n};\n\nexport default RegisterLoginButton;\n"],"names":["CTA","styled","theme","Button","Wrapper","$isRegistered","$isSubscriber","css","UserIcon","Icon","UserSolid24","IconWrapper","Text","truncate","Label","Status","RegisterLoginButton","__name","id","href","status","isRegistered","cta","children","button","jsxs","rest","isSubscriber","jsx","ThemeProvider","premiumTheme"],"mappings":"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"}