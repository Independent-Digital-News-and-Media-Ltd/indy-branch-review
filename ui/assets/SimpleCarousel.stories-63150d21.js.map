{"version":3,"file":"SimpleCarousel.stories-63150d21.js","sources":["../../../src/components/SimpleCarousel/hooks/useCaptionHeight.ts","../../../src/components/SimpleCarousel/hooks/useSimpleSlider.ts","../../../src/components/SimpleCarousel/Carousel.styles.ts","../../../src/components/SimpleCarousel/Simple/SimpleCarousel.constants.ts","../../../src/components/SimpleCarousel/Simple/Controls.tsx","../../../src/components/SimpleCarousel/Header.tsx","../../../src/components/SimpleCarousel/Carousel.tsx","../../../src/components/SimpleCarousel/Simple/SimpleCarousel.styles.ts","../../../src/components/SimpleCarousel/Simple/Slider.tsx","../../../src/components/SimpleCarousel/Simple/SimpleCarousel.tsx"],"sourcesContent":["import { useRef, useState, useEffect, useMemo } from 'react';\n\ninterface UseCaptionHeightProps {\n  itemCount: number;\n}\n\ninterface UseCaptionHeighReturnValue {\n  handleCaptionRef: (index: number) => (element: HTMLDivElement | null) => void;\n  captionHeight: number;\n}\n\nconst useCaptionHeight = ({\n  itemCount,\n}: UseCaptionHeightProps): UseCaptionHeighReturnValue => {\n  const initialRefs = Array.from({ length: itemCount }, () =>\n    useRef<HTMLDivElement | null>(null),\n  );\n  const captionRefs = useMemo(() => initialRefs, [initialRefs]);\n  const [captionHeight, setCaptionHeight] = useState(0);\n\n  useEffect(() => {\n    const resizeObserver = new ResizeObserver((entries) => {\n      let tallestCaption: number = 0;\n\n      entries.map((entry) => {\n        // get the height of the caption text\n        const currentHeight = entry.target.children[0].clientHeight;\n\n        if (currentHeight > tallestCaption) {\n          tallestCaption = currentHeight;\n        }\n      });\n\n      setCaptionHeight(tallestCaption);\n    });\n\n    captionRefs.forEach((ref) => {\n      const caption = ref.current;\n\n      if (caption) {\n        resizeObserver.observe(caption);\n      }\n    });\n\n    return () => resizeObserver.disconnect();\n  }, [captionRefs]);\n\n  const handleCaptionRef =\n    (index: number) => (element: HTMLDivElement | null) => {\n      captionRefs[index].current = element;\n    };\n\n  return {\n    handleCaptionRef,\n    captionHeight,\n  };\n};\n\nexport default useCaptionHeight;\n","import {\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n  MutableRefObject,\n} from 'react';\n\ninterface UseSimpleSliderProps {\n  initialIndex?: number;\n}\n\ninterface UseSimpleSliderReturnValue {\n  sliderRef: MutableRefObject<HTMLUListElement | null>;\n  currentIndex: number;\n  handlePrev: () => void;\n  handleNext: () => void;\n}\n\nconst useSimpleSlider = ({\n  initialIndex = 0,\n}: UseSimpleSliderProps = {}): UseSimpleSliderReturnValue => {\n  const sliderRef = useRef<HTMLUListElement | null>(null);\n  const [currentIndex, setCurrentIndex] = useState(initialIndex);\n\n  useEffect(() => {\n    const slider = sliderRef.current;\n\n    if (!slider) return;\n\n    const slides = Array.from(slider.children);\n\n    const handleIntersection = (entries: IntersectionObserverEntry[]) => {\n      entries.map((entry) => {\n        if (entry.isIntersecting) {\n          const scrollLeft = slider.scrollLeft;\n          const slideWidth = slider.clientWidth;\n          const newIndex = Math.round(scrollLeft / slideWidth);\n          setCurrentIndex(newIndex);\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(handleIntersection, {\n      root: slider,\n      threshold: 0.5,\n    });\n\n    slides.forEach((slide) => {\n      observer.observe(slide);\n    });\n\n    return () => observer.disconnect();\n  }, []);\n\n  const useControls = useCallback((newIndex: number) => {\n    const slider = sliderRef.current;\n\n    if (!slider) return;\n\n    const slideWidth = slider.clientWidth;\n\n    slider.scrollTo({\n      left: newIndex * slideWidth,\n      behavior: 'smooth',\n    });\n\n    setCurrentIndex(newIndex);\n  }, []);\n\n  const handlePrev = () => useControls(currentIndex - 1);\n\n  const handleNext = () => useControls(currentIndex + 1);\n\n  return {\n    sliderRef,\n    currentIndex,\n    handlePrev,\n    handleNext,\n  };\n};\n\nexport default useSimpleSlider;\n","import { styled } from 'styled-components';\n\nimport IconButton, { IconButtonProps } from '#components/IconButton';\nimport ScreenReaderOnly from '#components/ScreenReaderOnly';\n\nimport { hideScrollbar } from '#theme/mixins';\n\nimport ChevronLeftSVG from '#icons/chevron-left-solid-24.svg';\nimport ChevronRightSVG from '#icons/chevron-right-solid-24.svg';\n\ntype ButtonProps = Omit<IconButtonProps, 'svg' | 'isCosy' | 'size'>;\n\nexport const Wrapper = styled.section`\n  display: flex;\n  box-sizing: border-box;\n  flex-direction: column;\n`;\n\nexport const Header = styled.header``;\n\nexport const ScreenReaderOnlyHeader = styled(ScreenReaderOnly).attrs({\n  as: 'header',\n})``;\n\nexport const Title = styled.h3``;\n\nexport const ScreenReaderOnlyDescription = styled(ScreenReaderOnly).attrs({\n  as: 'p',\n})``;\n\nexport const List = styled.ul`\n  display: flex;\n  width: 100%;\n  padding: 0;\n  margin: 0 -1px;\n  list-style: none;\n  -webkit-overflow-scrolling: touch;\n  overflow-x: auto;\n  overflow-y: visible;\n  scroll-behavior: smooth;\n  scroll-snap-type: x mandatory;\n  ${hideScrollbar}\n`;\n\nexport const ListItem = styled.li`\n  width: 100%;\n  flex: 0 0 auto;\n  padding: 0;\n  margin: 0;\n  scroll-snap-align: start;\n`;\n\nexport const Nav = styled.nav`\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n`;\n\nexport const NavText = styled.span``;\n\nexport const PrevButton = styled(IconButton).attrs({\n  size: 'large',\n  svg: ChevronLeftSVG,\n})<ButtonProps>``;\n\nexport const NextButton = styled(IconButton).attrs({\n  size: 'large',\n  svg: ChevronRightSVG,\n})<ButtonProps>``;\n","/** This class name is added for analytics tracking and it's been intentionally named to align with the existing one in the flow-web  */\nexport const CLASS_GALLERY_BUTTON = 'gallery-btn';\n","import classnames from 'classnames';\nimport { FC } from 'react';\n\nimport { Nav, NavText, PrevButton, NextButton } from '../Carousel.styles';\nimport { SimpleControlsProps } from '../Carousel.types';\n\nimport { CLASS_GALLERY_BUTTON } from './SimpleCarousel.constants';\n\nconst Controls: FC<SimpleControlsProps> = ({\n  handlePrev,\n  handleNext,\n  itemCount,\n  currentIndex,\n  contentType = 'Image',\n  className,\n}) => {\n  const isAtStart = currentIndex === 0;\n  const isAtEnd = currentIndex === itemCount - 1;\n\n  return (\n    <Nav aria-label=\"slide controls\">\n      <NavText>{`${contentType} ${currentIndex + 1} of ${itemCount}`}</NavText>\n      <PrevButton\n        className={classnames(className, CLASS_GALLERY_BUTTON)}\n        aria-label=\"Previous\"\n        isDisabled={isAtStart}\n        onClick={handlePrev}\n        data-testid=\"prev-button\"\n      />\n      <NextButton\n        className={classnames(className, CLASS_GALLERY_BUTTON)}\n        aria-label=\"Next\"\n        isDisabled={isAtEnd}\n        onClick={handleNext}\n        data-testid=\"next-button\"\n      />\n    </Nav>\n  );\n};\n\nexport default Controls;\n","import { FC } from 'react';\n\nimport {\n  Header as VisibleHeader,\n  ScreenReaderOnlyHeader,\n  Title,\n} from './Carousel.styles';\nimport { HeaderProps } from './Carousel.types';\n\nconst Header: FC<HeaderProps> = ({ title, showTitle }) => {\n  const StyledHeader = showTitle ? VisibleHeader : ScreenReaderOnlyHeader;\n\n  return (\n    <StyledHeader>\n      <Title>{title}</Title>\n    </StyledHeader>\n  );\n};\n\nexport default Header;\n","import { FC } from 'react';\n\nimport { Wrapper, ScreenReaderOnlyDescription } from './Carousel.styles';\nimport { CarouselProps } from './Carousel.types';\nimport Header from './Header';\n\nconst Carousel: FC<CarouselProps> = ({\n  title,\n  showTitle = true,\n  description,\n  className,\n  children,\n}) => (\n  <Wrapper className={className}>\n    <Header title={title} showTitle={showTitle} />\n    <ScreenReaderOnlyDescription>{description}</ScreenReaderOnlyDescription>\n    {children}\n  </Wrapper>\n);\n\nexport default Carousel;\n","import { styled, css } from 'styled-components';\n\nimport {\n  MediaPlusCaptionForSlider,\n  Caption,\n} from '#components/MediaPlusCaption';\n\nimport * as device from '#theme/devices';\n\nimport Carousel from '../Carousel';\nimport { List, Nav, NavText } from '../Carousel.styles';\n\ninterface SimpleCarouselStylesProps {\n  $captionHeight: number;\n}\n\nexport const StyledCarousel = styled(Carousel)<SimpleCarouselStylesProps>`\n  ${({ $captionHeight }) => css`\n    --caption-height: ${$captionHeight ? `${$captionHeight}px` : 'auto'};\n  `}\n  --gap: ${({ theme }) => theme.spacing.x0_5}px;\n  --padding: ${({ theme }) => theme.spacing.x1_5}px;\n  --nav-min-height: ${({ theme }) =>\n    theme.dimension.minTouchArea}px; /** min height for controls on tablets */\n  --nav-width: 205px; /** set width for controls on tablets */\n  gap: var(--gap);\n  padding: var(--padding);\n  background: ${({ theme }) => theme.color.canvas.secondary};\n\n  ${NavText} {\n    margin-right: ${({ theme }) => theme.spacing.x2}px;\n    font: ${({ theme }) => theme.textStyle.media.pagination};\n  }\n\n  @media ${device.onlyTablet} {\n    --padding: ${({ theme }) => theme.spacing.x4}px\n      ${({ theme }) => theme.spacing.x4}px ${({ theme }) => theme.spacing.x2}px;\n    position: relative;\n\n    ${Nav} {\n      position: absolute;\n      right: 0;\n      bottom: 0;\n      width: var(--nav-width);\n      height: var(--caption-height);\n      min-height: var(--nav-min-height);\n      padding-right: ${({ theme }) => theme.spacing.x4}px;\n      padding-bottom: ${({ theme }) => theme.spacing.x2}px;\n      background: ${({ theme }) => theme.color.canvas.secondary};\n    }\n  }\n\n  @media ${device.laptop} {\n    --gap: ${({ theme }) => theme.spacing.x1}px;\n    --padding: ${({ theme }) => theme.spacing.x1_5}px\n      ${({ theme }) => theme.spacing.x8}px ${({ theme }) => theme.spacing.x5}px;\n\n    ${List} {\n      order: 2;\n    }\n\n    ${Nav} {\n      order: 1;\n    }\n  }\n`;\n\nexport const StyledMediaPlusCaption = styled(MediaPlusCaptionForSlider)`\n  ${Caption} {\n    margin-top: ${({ theme }) => theme.spacing.x0_5}px;\n\n    @media ${device.tablet} {\n      margin-top: ${({ theme }) => theme.spacing.x1}px;\n    }\n\n    @media ${device.onlyTablet} {\n      display: flex;\n      width: calc(100% - (var(--nav-width)));\n      height: var(--caption-height);\n      min-height: var(--nav-min-height);\n      align-items: center;\n      padding-right: ${({ theme }) => theme.spacing.x2}px;\n    }\n\n    @media ${device.laptop} {\n      line-height: 16px;\n    }\n  }\n`;\n","import { forwardRef } from 'react';\n\nimport { List, ListItem } from '../Carousel.styles';\nimport { SimpleSliderProps, Item } from '../Carousel.types';\n\nconst Slider = forwardRef<HTMLUListElement, SimpleSliderProps>(function Slider(\n  { items, renderSlide, currentIndex, handleCaptionRef },\n  ref,\n) {\n  const currentSlide = items[currentIndex];\n\n  return (\n    <List ref={ref}>\n      {items.map((item: Item<unknown>, index: number) => {\n        const isVisible = currentSlide === item;\n        const captionRef = handleCaptionRef(index);\n\n        return (\n          <ListItem key={`item-${index}`} aria-hidden={!isVisible}>\n            {renderSlide({ item, captionRef })}\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n});\n\nexport default Slider;\n","import { FC } from 'react';\n\nimport { SimpleCarouselProps } from '../Carousel.types';\nimport useCaptionHeight from '../hooks/useCaptionHeight';\nimport useSimpleSlider from '../hooks/useSimpleSlider';\n\nimport Controls from './Controls';\nimport { StyledCarousel } from './SimpleCarousel.styles';\nimport Slider from './Slider';\n\nconst SimpleCarousel: FC<SimpleCarouselProps> = ({\n  title,\n  items,\n  renderSlide,\n}) => {\n  const itemCount = items.length || 0;\n  const { sliderRef, currentIndex, handlePrev, handleNext } = useSimpleSlider();\n  const { handleCaptionRef, captionHeight } = useCaptionHeight({ itemCount });\n\n  if (itemCount === 0) {\n    return null;\n  }\n\n  return (\n    <StyledCarousel\n      title={title}\n      showTitle={false}\n      description=\"Carousel with one slide shown at a time. Use the Previous and Next buttons to navigate between slides.\"\n      $captionHeight={captionHeight}\n    >\n      <Slider\n        items={items}\n        renderSlide={renderSlide}\n        currentIndex={currentIndex}\n        handleCaptionRef={handleCaptionRef}\n        ref={sliderRef}\n      />\n      <Controls\n        handlePrev={handlePrev}\n        handleNext={handleNext}\n        itemCount={itemCount}\n        currentIndex={currentIndex}\n      />\n    </StyledCarousel>\n  );\n};\n\nexport default SimpleCarousel;\n"],"names":["useCaptionHeight","itemCount","initialRefs","Array","from","length","useRef","captionRefs","useMemo","captionHeight","setCaptionHeight","useState","useEffect","resizeObserver","ResizeObserver","entries","tallestCaption","map","entry","currentHeight","target","children","clientHeight","forEach","ref","caption","current","observe","disconnect","handleCaptionRef","index","element","useSimpleSlider","initialIndex","sliderRef","currentIndex","setCurrentIndex","slider","slides","handleIntersection","isIntersecting","scrollLeft","slideWidth","clientWidth","newIndex","Math","round","observer","IntersectionObserver","root","threshold","slide","useControls","useCallback","scrollTo","left","behavior","handlePrev","handleNext","Wrapper","styled","section","withConfig","componentId","Header","header","ScreenReaderOnlyHeader","ScreenReaderOnly","attrs","as","Title","h3","ScreenReaderOnlyDescription","List","ul","hideScrollbar","ListItem","li","Nav","nav","NavText","span","PrevButton","IconButton","size","svg","ChevronLeftSVG","NextButton","ChevronRightSVG","CLASS_GALLERY_BUTTON","Controls","__name","className","isAtStart","isAtEnd","jsxs","jsx","contentType","classnames","title","StyledHeader","showTitle","VisibleHeader","Carousel","description","StyledCarousel","$captionHeight","css","theme","spacing","x0_5","x1_5","dimension","minTouchArea","color","canvas","secondary","x2","textStyle","media","pagination","device","x4","x1","x8","x5","StyledMediaPlusCaption","MediaPlusCaptionForSlider","Caption","Slider","forwardRef","items","renderSlide","currentSlide","item","isVisible","captionRef","SimpleCarousel"],"mappings":"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"}