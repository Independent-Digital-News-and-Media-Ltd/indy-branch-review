{"version":3,"file":"StarRating-0835c329.js","sources":["../../../src/components/StarRating/StarRating.styles.js","../../../src/components/StarRating/StarRating.types.js","../../../src/components/StarRating/StarRating.jsx"],"sourcesContent":["import { styled } from 'styled-components';\n\nexport const StyledWrapper = styled.div`\n  display: flex;\n  gap: 2px;\n  color: ${({ theme }) => theme.color.primary.base};\n`;\n","import PropTypes from 'prop-types';\n\nimport { SIZE_SMALL, SIZE_BASE } from '#components/Icon/Icon.constants';\n\nexport default {\n  /** CSS class name for the component */\n  className: PropTypes.string,\n  /** Dimensions of the star icons */\n  size: PropTypes.oneOf([SIZE_SMALL, SIZE_BASE]),\n  /** Rating value out of 'total' */\n  value: PropTypes.number,\n  /** Total potential number of stars */\n  total: PropTypes.number,\n};\n","import Icon from '#components/Icon';\n\nimport { StyledWrapper } from './StarRating.styles';\nimport propTypes from './StarRating.types';\n\nimport StarHalfFilledSVG from '#icons/star-half-solid-24.svg';\nimport StarEmptySVG from '#icons/star-outline-24.svg';\nimport StarFilledSVG from '#icons/star-solid-24.svg';\n\nconst StarRating = ({ className, size = 'base', value = 0, total = 5 }) => {\n  if (isNaN(value) || isNaN(total) || value < 0 || total < 1 || value > total) {\n    return null;\n  }\n\n  const svgMap = [\n    // integer => full stars\n    [StarFilledSVG, Math.floor(value)],\n\n    // fractional => half stars\n    [StarHalfFilledSVG, Math.ceil(value % 1)],\n\n    // remainder => empty stars\n    [StarEmptySVG, Math.floor(total - value)],\n  ];\n\n  const icons = svgMap.map(([svg, count]) =>\n    [...Array(count)].map((_int, i) => (\n      <Icon key={i} data-key={i} svg={svg} size={size} />\n    )),\n  );\n\n  return <StyledWrapper className={className}>{icons}</StyledWrapper>;\n};\n\nStarRating.propTypes = propTypes;\n\nexport default StarRating;\n"],"names":["StyledWrapper","styled","div","withConfig","componentId","theme","color","primary","base","propTypes","className","PropTypes","string","size","oneOf","SIZE_SMALL","SIZE_BASE","value","number","total","StarRating","isNaN","icons","StarFilledSVG","Math","floor","StarHalfFilledSVG","ceil","StarEmptySVG","map","svg","count","Array","_int","i","jsx","Icon","StarRating$1"],"mappings":"kaAEO,MAAMA,EAAgBC,EAAOC,IAAGC,WAAA,CAAAC,YAAA,aAAA,CAAA,EAAA,CAAA,8BAAA,GAAA,EAG5B,CAAC,CAAEC,MAAAA,CAAM,IAAMA,EAAMC,MAAMC,QAAQC,IAAI,ECDnCC,EAAA,CAEbC,UAAWC,EAAUC,OAErBC,KAAMF,EAAUG,MAAM,CAACC,EAAYC,CAAS,CAAC,EAE7CC,MAAON,EAAUO,OAEjBC,MAAOR,EAAUO,MACnB,ECJAE,EAAAA,EAAAA,CAAA,CAAAV,UAAAA,EAAAG,KAAAA,EAAA,OAAAI,MAAAA,EAAA,EAAAE,MAAAA,EAAA,CAAA,IAAA,CACAE,GAAAA,MAAAJ,CAAA,GAAAI,MAAAF,CAAA,GAAAF,EAAA,GAAAE,EAAA,GAAAF,EAAAE,EACA,OAAA,KAcAG,MAAAA,EAXA,CAEA,CAAAC,EAAAC,KAAAC,MAAAR,CAAA,CAAA,EAGA,CAAAS,EAAAF,KAAAG,KAAAV,EAAA,CAAA,CAAA,EAGA,CAAAW,EAAAJ,KAAAC,MAAAN,EAAAF,CAAA,CAAA,CAAA,EAGAY,IAAA,CAAA,CAAAC,EAAAC,CAAA,IACA,CAAA,GAAAC,MAAAD,CAAA,CAAA,EAAAF,IAAA,CAAAI,EAAAC,IACAC,MAAAC,EAAA,CAAA,WAAAF,EAAA,IAAAJ,EAAA,KAAAjB,CAAA,EAAAqB,CACA,CAAA,CACA,EAEA,OAAAC,EAAAA,IAAAnC,EAAA,CAAA,UAAAU,EAAAY,SAAAA,CAAA,CAAA,CACA,EAvBAF,cAyBAA,EAAAX,UAAAA,EAEA,MAAA4B,EAAAjB"}