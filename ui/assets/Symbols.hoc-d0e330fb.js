var N=Object.defineProperty;var t=(e,n)=>N(e,"name",{value:n,configurable:!0});import{j as a}from"./jsx-runtime-91e341d4.js";import"./index-17b0cd16.js";import{r as V}from"./index-b56a0300.js";import{u as q}from"./styled-components.browser.esm-dd68fb2f.js";import{p as j}from"./index-6925154b.js";function O(e){return e&&typeof e=="object"&&"default"in e?e.default:e}t(O,"_interopDefault");var E=V,U=O(E);function v(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}t(v,"_defineProperty");function D(e,n){e.prototype=Object.create(n.prototype),e.prototype.constructor=e,e.__proto__=n}t(D,"_inheritsLoose");var A=!!(typeof window<"u"&&window.document&&window.document.createElement);function M(e,n,r){if(typeof e!="function")throw new Error("Expected reducePropsToState to be a function.");if(typeof n!="function")throw new Error("Expected handleStateChangeOnClient to be a function.");if(typeof r<"u"&&typeof r!="function")throw new Error("Expected mapStateOnServer to either be undefined or a function.");function o(s){return s.displayName||s.name||"Component"}return t(o,"getDisplayName"),t(function(u){if(typeof u!="function")throw new Error("Expected WrappedComponent to be a React component.");var c=[],i;function d(){i=e(c.map(function(y){return y.props})),m.canUseDOM?n(i):r&&(i=r(i))}t(d,"emitChange");var m=function(y){D(l,y);function l(){return y.apply(this,arguments)||this}t(l,"SideEffect"),l.peek=t(function(){return i},"peek"),l.rewind=t(function(){if(l.canUseDOM)throw new Error("You may only call rewind() on the server. Call peek() to read the current state.");var g=i;return i=void 0,c=[],g},"rewind");var h=l.prototype;return h.UNSAFE_componentWillMount=t(function(){c.push(this),d()},"UNSAFE_componentWillMount"),h.componentDidUpdate=t(function(){d()},"componentDidUpdate"),h.componentWillUnmount=t(function(){var g=c.indexOf(this);c.splice(g,1),d()},"componentWillUnmount"),h.render=t(function(){return U.createElement(u,this.props)},"render"),l}(E.PureComponent);return v(m,"displayName","SideEffect("+o(u)+")"),v(m,"canUseDOM",A),m},"wrap")}t(M,"withSideEffect");var T=M;const _=q.svg.withConfig({componentId:"sc-eaj12q-0"})(["width:",";height:",";"],({$width:e})=>e?`${e}px`:"100%",({$height:e})=>e?`${e}px`:"100%");try{_.displayName="Wrapper",_.__docgenInfo={description:"",displayName:"Wrapper",props:{theme:{defaultValue:null,description:"",name:"theme",required:!1,type:{name:"DefaultTheme"}},as:{defaultValue:null,description:"",name:"as",required:!1,type:{name:"void | WebTarget"}},forwardedAs:{defaultValue:null,description:"",name:"forwardedAs",required:!1,type:{name:"void | WebTarget"}}}}}catch{}const R=t(({children:e,className:n,viewBox:r,width:o,height:s,...u})=>{const c=Object.fromEntries(Object.entries(u).filter(([i])=>!["Symbol","svg","name"].includes(i)));return a.jsx(_,{className:n,viewBox:r,$width:o,$height:s,...c,children:e})},"Inline"),W=t(({className:e,id:n,width:r,height:o})=>a.jsx(_,{$width:r,$height:o,className:e,children:a.jsx("use",{href:`#${n}`})}),"Use"),w=t(({isInline:e=!0,children:n,...r})=>e?a.jsx(R,{...r,children:n}):a.jsx(W,{...r}),"SVG"),S=t(({children:e,id:n,viewBox:r})=>a.jsx("symbol",{id:n,viewBox:r,children:e}),"Symbol$1");try{w.displayName="SVG",w.__docgenInfo={description:`This component is a simple abstraction which allows for the rendering of an
SVG as 'inline' or as a 'use' reference via a flag.`,displayName:"SVG",props:{isInline:{defaultValue:{value:"true"},description:"",name:"isInline",required:!1,type:{name:"boolean"}},viewBox:{defaultValue:null,description:"",name:"viewBox",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},width:{defaultValue:null,description:"",name:"width",required:!0,type:{name:"number"}},height:{defaultValue:null,description:"",name:"height",required:!0,type:{name:"number"}}}}}catch{}try{S.displayName="Symbol",S.__docgenInfo={description:`This component is the symbol definition which is  included in the symbols
drop and referenced by <Use />`,displayName:"Symbol",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},viewBox:{defaultValue:null,description:"",name:"viewBox",required:!0,type:{name:"string"}}}}}catch{}let b=null;function B(e){return document?(b=Array.from(document.querySelectorAll(`.${e} symbol`),({id:n})=>n),b):null}t(B,"getSSRSymbolIDs");function G(e,n){const r=b||B(n);return Array.isArray(r)&&r.includes(e)}t(G,"existsAsSymbol");function $(e){return[...new Map(e.map(r=>[r.id,r])).values()]}t($,"reducePropsToState");function L(e=[]){return e}t(L,"handleStateChangeOnClient");function C(e=[]){return e}t(C,"mapStateOnServer");const I="__INDY_UI_SYMBOLS__",f=T($,L,C)(w),P=t(e=>{const n=t(({svg:r,...o})=>{const{props:{children:s,id:u,viewBox:c,...i}}=r(),d=f.canUseDOM&&!G(u,I);return a.jsx(e,{...i,...o,id:u,isInline:d,viewBox:c,children:s})},"Wrapped");return n.propTypes={svg:j.func.isRequired},n},"withIconSideEffect"),Y=P(f),k=t(()=>{const e=f.canUseDOM?"peek":"rewind",n=f[e]&&f[e]()||[];return(n==null?void 0:n.length)>0&&a.jsx("svg",{className:I,xmlns:"http://www.w3.org/2000/svg",hidden:!0,children:n.map(({children:r,id:o,viewBox:s})=>a.jsx(S,{id:o,viewBox:s,children:r},o))})},"Symbols");w.__docgenInfo={description:`This component is a simple abstraction which allows for the rendering of an
SVG as 'inline' or as a 'use' reference via a flag.`,methods:[],displayName:"SVG",props:{isInline:{defaultValue:{value:"true",computed:!1},required:!1}}};k.__docgenInfo={description:`Component for 'dropping' the symbols on the page. This component currently
only really applies during SSR. @see handleStateChangeOnClient
@returns An SVG element containing a unique permutation of <use /> elements
containing the icons that have been declared using the Icon component`,methods:[],displayName:"Symbols"};function x(e){return t(function(r){return a.jsx(Y,{...r,svg:e})},"LogoIcon")}t(x,"withSymbol");try{x.displayName="withSymbol",x.__docgenInfo={description:"",displayName:"withSymbol",props:{}}}catch{}export{k as S,Y as a};
//# sourceMappingURL=Symbols.hoc-d0e330fb.js.map
