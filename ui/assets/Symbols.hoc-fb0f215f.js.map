{"version":3,"file":"Symbols.hoc-fb0f215f.js","sources":["../../../src/components/Icon/Icon.constants.ts","../../../../node_modules/.pnpm/react-side-effect@2.1.2_react@18.2.0/node_modules/react-side-effect/lib/index.js","../../../src/components/Symbols/SVG/SVG.styles.tsx","../../../src/components/Symbols/SVG/SVG.tsx","../../../src/components/Symbols/Symbols.helpers.js","../../../src/components/Symbols/Symbols.jsx","../../../src/components/Symbols/Symbols.hoc.tsx"],"sourcesContent":["export const WIDTH_X_SMALL = 12;\nexport const WIDTH_SMALL = 16;\nexport const WIDTH_BASE = 24;\nexport const WIDTH_LARGE = 32;\n\nexport const SIZE_X_SMALL = 'x-small';\nexport const SIZE_SMALL = 'small';\nexport const SIZE_BASE = 'base';\nexport const SIZE_LARGE = 'large';\n\nexport const SIZES = {\n  [SIZE_X_SMALL]: WIDTH_X_SMALL,\n  [SIZE_SMALL]: WIDTH_SMALL,\n  [SIZE_BASE]: WIDTH_BASE,\n  [SIZE_LARGE]: WIDTH_LARGE,\n};\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect =\n    /*#__PURE__*/\n    function (_PureComponent) {\n      _inheritsLoose(SideEffect, _PureComponent);\n\n      function SideEffect() {\n        return _PureComponent.apply(this, arguments) || this;\n      }\n\n      // Try to use displayName of wrapped component\n      // Expose canUseDOM so tests can monkeypatch it\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      var _proto = SideEffect.prototype;\n\n      _proto.UNSAFE_componentWillMount = function UNSAFE_componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      _proto.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      _proto.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      _proto.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.PureComponent);\n\n    _defineProperty(SideEffect, \"displayName\", \"SideEffect(\" + getDisplayName(WrappedComponent) + \")\");\n\n    _defineProperty(SideEffect, \"canUseDOM\", canUseDOM);\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","import { styled } from 'styled-components';\n\nimport { WrapperProps } from './SVG.types';\n\nexport const Wrapper = styled.svg<WrapperProps>`\n  width: ${({ $width }) => ($width ? `${$width}px` : '100%')};\n  height: ${({ $height }) => ($height ? `${$height}px` : '100%')};\n`;\n","import { FC } from 'react';\n\nimport { Wrapper } from './SVG.styles';\nimport { InlineProps, UseProps, SvgProps, SymbolProps } from './SVG.types';\n\n/**\n * This component is used to render inline SVGs. This typically happens when the\n * SVG is being dynamically rendered and not part of the SSR symbol drop\n */\nconst Inline: FC<InlineProps> = ({\n  children,\n  className,\n  viewBox,\n  width,\n  height,\n  ...rest\n}) => {\n  const attrs = Object.fromEntries(\n    Object.entries(rest).filter(\n      ([attr]) => !['Symbol', 'svg', 'name'].includes(attr),\n    ),\n  );\n\n  return (\n    <Wrapper\n      className={className}\n      viewBox={viewBox}\n      $width={width}\n      $height={height}\n      {...attrs}\n    >\n      {children}\n    </Wrapper>\n  );\n};\n\n/**\n * This component is used to render a reference to a symbol. This typically\n * happens as part of the SSR symbol drop\n */\nconst Use: FC<UseProps> = ({ className, id, width, height }) => (\n  <Wrapper $width={width} $height={height} className={className}>\n    <use href={`#${id}`} />\n  </Wrapper>\n);\n\n/**\n * This component is a simple abstraction which allows for the rendering of an\n * SVG as 'inline' or as a 'use' reference via a flag.\n */\nexport const SVG: FC<SvgProps> = ({ isInline = true, children, ...rest }) => {\n  if (isInline) {\n    return <Inline {...rest}>{children}</Inline>;\n  }\n\n  return <Use {...rest} />;\n};\n\n/**\n * This component is the symbol definition which is  included in the symbols\n * drop and referenced by <Use />\n */\nexport const Symbol: FC<SymbolProps> = ({ children, id, viewBox }) => (\n  <symbol id={id} viewBox={viewBox}>\n    {children}\n  </symbol>\n);\n","let ssrSymbolIds = null;\n\n/**\n * Returns the IDs of all symbols available for reference\n * @returns {array} An array of the IDs of the symbols that are present in the\n * symbol drop\n */\nexport function getSSRSymbolIDs(symbolsClass) {\n  if (!document) {\n    return null;\n  }\n\n  ssrSymbolIds = Array.from(\n    document.querySelectorAll(`.${symbolsClass} symbol`),\n    ({ id }) => id,\n  );\n\n  return ssrSymbolIds;\n}\n\n/**\n * Returns true/false depending on whether the icon has already been rendered\n * into a symbol drop\n * @param {string} id id of the symbol\n * @param {string} symbolsClass selector for the symbols drop\n * @returns {bool} Whether or not a symbol exists matching the given ID\n */\nexport function existsAsSymbol(id, symbolsClass) {\n  const ids = ssrSymbolIds || getSSRSymbolIDs(symbolsClass);\n  const existsAsSymbol = Array.isArray(ids) && ids.includes(id);\n\n  return existsAsSymbol;\n}\n\n/**\n * Called following any updateTakes in an array of the properties to all of the\n * mounted instances of the icon component\n * @param {array} newState an array of the properties to all of the mounted\n * instances of Icons\n * @returns {array} A unique permutation of the array of Icon components as\n * generated by Icons\n */\nexport function reducePropsToState(newState) {\n  const reducedState = [\n    ...new Map(newState.map((item) => [item.id, item])).values(),\n  ];\n\n  return reducedState;\n}\n\n/**\n * Invoked during CSR with the return value of reducePropsToState, it is used to\n * then emit a side effect\n *\n * @param {array} reducedState A unique permutation of the array of Icon\n * components as generated by Icons\n * @returns {array}\n */\nexport function handleStateChangeOnClient(reducedState = []) {\n  /**\n   * It is not possible to render the icons on the client without setting up\n   * another Symbol drop for each rehydratable component or rehydrating an\n   * existing Symbol drop and sharing the same instance of SideEffect. This is\n   * because Chrome is currently unable to render the SVGs dynamically added to\n   * the shadow DOM. It's simpler, therefore, to just render-inline any CSR\n   * icons that have not been added to a Symbol drop as part of the SSR.\n   * @see https://bugs.chromium.org/p/chromium/issues/detail?id=1099181\n   */\n\n  return reducedState;\n}\n\n/**\n * Invoked during SSR, this is equivalent to handleStateChangeOnClient and\n * offers an opportunity to augment the icon stack before it is committed to\n * state\n * @param {array} reducedState A unique permutation of the array of Icon\n * components as generated by Icons\n * @returns {array}\n */\nexport function mapStateOnServer(reducedState = []) {\n  return reducedState;\n}\n","import PropTypes from 'prop-types';\nimport withSideEffect from 'react-side-effect';\n\nimport { SVG, Symbol } from './SVG';\nimport {\n  reducePropsToState,\n  handleStateChangeOnClient,\n  mapStateOnServer,\n  existsAsSymbol,\n} from './Symbols.helpers';\n\nexport const CLASS_SYMBOLS_DROP = '__INDY_UI_SYMBOLS__';\n\nexport const SideEffects = withSideEffect(\n  reducePropsToState,\n  handleStateChangeOnClient,\n  mapStateOnServer,\n)(SVG);\n\nexport const withIconSideEffect = (Reference) => {\n  const Wrapped = ({ svg, ...rest }) => {\n    const {\n      props: { children, id, viewBox, ...attrs },\n    } = svg();\n\n    // Render an inline SVG if the symbol doesn't already exist in a Symbol drop\n    const isInline =\n      SideEffects.canUseDOM && !existsAsSymbol(id, CLASS_SYMBOLS_DROP);\n\n    return (\n      <Reference\n        {...attrs}\n        {...rest}\n        id={id}\n        isInline={isInline}\n        viewBox={viewBox}\n      >\n        {children}\n      </Reference>\n    );\n  };\n\n  Wrapped.propTypes = {\n    svg: PropTypes.func.isRequired,\n  };\n\n  return Wrapped;\n};\n\nexport const SymbolRef = withIconSideEffect(SideEffects);\n\n/**\n * Component for 'dropping' the symbols on the page. This component currently\n * only really applies during SSR. @see handleStateChangeOnClient\n * @returns An SVG element containing a unique permutation of <use /> elements\n * containing the icons that have been declared using the Icon component\n */\nexport const Symbols = () => {\n  const method = SideEffects.canUseDOM ? 'peek' : 'rewind';\n  const mappedState = (SideEffects[method] && SideEffects[method]()) || [];\n\n  return (\n    mappedState?.length > 0 && (\n      <svg\n        className={CLASS_SYMBOLS_DROP}\n        xmlns=\"http://www.w3.org/2000/svg\"\n        hidden={true}\n      >\n        {mappedState.map(({ children, id, viewBox }) => (\n          <Symbol key={id} id={id} viewBox={viewBox}>\n            {children}\n          </Symbol>\n        ))}\n      </svg>\n    )\n  );\n};\n","import { SymbolRef } from './Symbols';\n\nexport function withSymbol<T extends object>(\n  WrappedComponent: React.ComponentType<T>,\n) {\n  return function LogoIcon(props: T) {\n    return <SymbolRef {...props} svg={WrappedComponent} />;\n  };\n}\n"],"names":["WIDTH_X_SMALL","WIDTH_SMALL","WIDTH_BASE","WIDTH_LARGE","SIZE_X_SMALL","SIZE_SMALL","SIZE_BASE","SIZE_LARGE","SIZES","_interopDefault","ex","__name","React","require$$0","React__default","_defineProperty","obj","key","value","_inheritsLoose","subClass","superClass","canUseDOM","withSideEffect","reducePropsToState","handleStateChangeOnClient","mapStateOnServer","getDisplayName","WrappedComponent","mountedInstances","state","emitChange","instance","SideEffect","_PureComponent","recordedState","_proto","index","lib","Wrapper","styled","$width","$height","Inline","children","className","viewBox","width","height","attrs","rest","attr","jsx","Use","id","SVG","isInline","Symbol","ssrSymbolIds","getSSRSymbolIDs","symbolsClass","document","Array","from","querySelectorAll","existsAsSymbol","ids","isArray","includes","newState","Map","map","item","values","reducedState","CLASS_SYMBOLS_DROP","SideEffects","withIconSideEffect","Reference","Wrapped","svg","props","propTypes","PropTypes","func","isRequired","SymbolRef","Symbols","method","mappedState","length","withSymbol"],"mappings":"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","x_google_ignoreList":[1]}