{"version":3,"file":"Table-f01ba904.js","sources":["../../../src/assets/icons/copy-outline-16.svg","../../../src/pages/components/CopyButton.jsx","../../../src/pages/components/Table.jsx"],"sourcesContent":["export default \"__VITE_ASSET__2789ef23__\"","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { styled } from 'styled-components';\n\nimport IconButton from '#components/IconButton';\n\nimport TickSVG from '#icons/check-solid-16.svg';\nimport CopySVG from '#icons/copy-outline-16.svg';\n\nconst Wrapper = styled(IconButton)`\n  &:disabled {\n    color: ${({ theme }) => theme.color.semiotic.success} !important;\n  }\n`;\n\nconst CopyButton = ({ className, value, timeout = 1.5, isCosy = true }) => {\n  const [isCopied, setIsCopied] = useState(false);\n\n  async function copyTextToClipboard(text) {\n    return await navigator.clipboard.writeText(text);\n  }\n\n  const handleCopyClick = async () => {\n    try {\n      await copyTextToClipboard(value);\n\n      setIsCopied(true);\n\n      setTimeout(() => {\n        setIsCopied(false);\n      }, timeout * 1000);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <Wrapper\n      className={className}\n      svg={isCopied ? TickSVG : CopySVG}\n      size=\"small\"\n      onClick={handleCopyClick}\n      isDisabled={isCopied}\n      isCosy={isCosy}\n    />\n  );\n};\n\nCopyButton.propTypes = {\n  className: PropTypes.string,\n  value: PropTypes.string.isRequired,\n  timeout: PropTypes.number,\n  isCosy: PropTypes.bool,\n};\n\nexport default CopyButton;\n","import PropTypes from 'prop-types';\nimport { styled } from 'styled-components';\n\nexport const Table = ({ children, className, colCount = 1, colWidth = 10 }) => {\n  const rowHeadingWidth = 100 - colCount * colWidth;\n  const cols = [];\n\n  for (let i = 0; i < colCount; i++) {\n    cols.push(<col key={i} width={`${colWidth}%`} />);\n  }\n\n  return (\n    <table className={className}>\n      <colgroup>\n        <col width={`${rowHeadingWidth}%`} />\n        {cols}\n      </colgroup>\n      {children}\n    </table>\n  );\n};\n\nTable.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.node,\n    PropTypes.arrayOf(PropTypes.node),\n  ]).isRequired,\n  className: PropTypes.string,\n  colCount: PropTypes.number,\n  colWidth: PropTypes.number,\n};\n\nexport const Group = styled.article`\n  --cell-padding: ${({ theme }) => theme.spacing.x1}px\n    ${({ theme }) => theme.spacing.x1_5}px;\n  margin: ${({ theme }) => theme.spacing.x2}px 0;\n`;\n\nexport const GroupHeader = styled.header`\n  padding: var(--cell-padding);\n`;\n\nexport const GroupTitle = styled.h1`\n  margin: 0;\n  font: bold 14px/18px ${(props) => props.theme.fontFamily.secondaryFont};\n`;\n\nexport const GroupTable = styled(Table)`\n  width: 100%;\n  border-collapse: collapse;\n  table-layout: fixed;\n`;\n\nexport const Headings = styled(GroupTable)`\n  width: 100%;\n  border-collapse: collapse;\n  table-layout: fixed;\n\n  th {\n    padding: 0 ${({ theme }) => theme.spacing.x1_5}px;\n    border: 1px solid transparent;\n    font: 16px/20px ${({ theme }) => theme.fontFamily.secondaryFont};\n  }\n`;\n\nexport const Cell = styled.td`\n  padding: var(--cell-padding);\n  border: 1px solid ${({ theme }) => theme.color.divider.light};\n  text-align: center;\n\n  &:last-child {\n    border-right: 0;\n  }\n`;\n\nexport const CellContents = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: ${({ theme }) => theme.spacing.x2}px;\n`;\n\nexport const RowHeading = styled(Cell).attrs({ as: 'th' })`\n  border-left: 0;\n  font: normal 12px/16px monospace;\n  text-align: left;\n`;\n\nexport const Description = styled.small`\n  color: ${({ theme }) => theme.color.ink.light};\n  font: 12px/16px ${(props) => props.theme.fontFamily.secondaryFont};\n`;\n"],"names":["SvgCopyOutline16","__name","props","React.createElement","Wrapper","styled","IconButton","withConfig","componentId","theme","color","semiotic","success","CopyButton","className","value","timeout","isCosy","isCopied","setIsCopied","useState","copyTextToClipboard","text","navigator","clipboard","writeText","handleCopyClick","setTimeout","err","console","error","jsx","TickSVG","CopySVG","propTypes","PropTypes","string","isRequired","number","bool","Table","children","colCount","colWidth","rowHeadingWidth","cols","i","push","jsxs","oneOfType","node","arrayOf","Group","article","spacing","x1","x1_5","x2","GroupHeader","header","GroupTitle","h1","fontFamily","secondaryFont","GroupTable","Headings","Cell","td","divider","light","CellContents","div","RowHeading","attrs","as","Description","small","ink"],"mappings":"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"}