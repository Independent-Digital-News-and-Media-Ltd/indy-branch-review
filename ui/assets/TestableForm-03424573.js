var B=Object.defineProperty;var I=(e,t,s)=>t in e?B(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s;var a=(e,t)=>B(e,"name",{value:t,configurable:!0});var m=(e,t,s)=>(I(e,typeof t!="symbol"?t+"":t,s),s);import{p as h,c as R,a as $,r as N,e as k,h as j,I as b}from"./InputWrapper-a6db9af3.js";import{j as v}from"./jsx-runtime-91e341d4.js";import{u as C}from"./styled-components.browser.esm-dd68fb2f.js";import{B as _}from"./Button-6cc3cb4d.js";import{F as A}from"./Form-a1df12a8.js";import{a as O,F as P}from"./index.esm-d17145de.js";import"./TextInput-a4e27216.js";import"./PasswordInput-57644bf7.js";import"./SelectInput-282eef3d.js";import"./Checkbox-d8c394ba.js";import"./CheckboxWithDropdown-02a548b3.js";import"./ValidationHint-0b9d255c.js";import{r as D}from"./index-b56a0300.js";const l=a(({type:e,condition:t,message:s,messageBuilder:i})=>t?null:{type:e,message:s,messageBuilder:i},"handler"),Z=a(()=>({validate:e=>{const s=typeof h(e)=="string";return l({type:"isString",condition:s,message:"Field must be text only",messageBuilder:i=>`${i} must be text only`})}}),"isString"),U=a(()=>({validate:e=>{const t=!isNaN(e);return l({type:"isNumber",condition:t,message:"Field must be a number",messageBuilder:s=>`${s} must be a number`})}}),"isNumber"),q=a(()=>({validate:e=>l({type:"isBoolean",condition:typeof e=="boolean",message:"Field must be true or false",messageBuilder:s=>`${s} must be true or false`})}),"isBoolean"),T=a((e="string")=>({validate:t=>{if(e==="boolean")return q().validate(t,{});const i=h(t).length>0;return l({type:"required",condition:i,message:"Field is required",messageBuilder:r=>`${r} is required`})}}),"isNotEmpty"),W=a(()=>({validate:e=>{const t=h(e),i=new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,}$/i).test(t);return l({type:"isEmail",condition:i,message:"Please enter a valid email address",messageBuilder:()=>"Please enter a valid email address"})}}),"isEmail"),z=a(e=>({validate:(t,s)=>{const r=h(t)===s[e];return l({type:"doesMatch",condition:r,message:"Fields must match",messageBuilder:n=>`${n} fields must match`})}}),"doesMatch"),G=a((e,t)=>({validate:s=>{const i=h(s),r=R(i,t),n={type:`hasMin${$(t||"")}`,condition:r>=e};return l(t?{...n,message:`Must contain minimum ${e} ${t}`,messageBuilder:()=>`Must contain minimum ${e} ${t}`}:{...n,message:`Minimum length is ${e} characters`,messageBuilder:()=>`Minimum length is ${e} characters`})}}),"hasMin"),J=a((e,t)=>({validate:s=>{const i=h(s),r=R(i,t),n={type:`hasMax${$(t||"")}`,condition:r<=e};return l(t?{...n,message:`Must contain maximum ${e} ${t}`,messageBuilder:()=>`Must contain maximum ${e} ${t}`}:{...n,message:`Maximum length is ${e} characters`,messageBuilder:()=>`Maximum length is ${e} characters`})}}),"hasMax"),K=a((e,t,s)=>({validate:i=>{const r=Number(i),n={type:`hasRange${$(s||"")}`,condition:r>=e&&r<=t};return l(s?{...n,message:`Must contain a minimum value of ${e} ${s} and a maximum value of ${t} ${s}`,messageBuilder:()=>`Must contain a minimum value of ${e} ${s} and a maximum value of ${t} ${s}`}:{...n,message:`Minimum value is ${e} characters and maximum value is ${t} characters`,messageBuilder:()=>`Minimum value is ${e} characters and maximum value is ${t} characters`})}}),"hasRange"),Q=a(()=>({validate:e=>{const s={type:"containsNoSpaces",condition:!h(e).includes(" ")};return l({...s,message:"Must not contain any spaces",messageBuilder:()=>"Must not contain any spaces"})}}),"containsNoSpaces"),X=a(e=>({validate:t=>{const s=h(t),i={type:"matchesRegex",condition:e.test(s)};return l({...i,message:"Field does not match the required format",messageBuilder:()=>"Field does not match the required format"})}}),"matchesRegex"),Y=a(e=>({validate:async t=>{const s=h(t),i={type:"hasCustomValidation",condition:await(async()=>{try{return await e(s)}catch{return!1}})()};return l({...i,message:"Field does not pass the custom validation",messageBuilder:()=>"Field does not pass the custom validation"})}}),"hasCustomValidation"),F=[];class w{constructor(t){m(this,"name");m(this,"primitiveType","string");m(this,"isRequired",!1);m(this,"validators",[]);this.name=t}initialise(t,s){this.primitiveType=t,this.validators=s}checkValid(){if(!this.validators.length)throw new Error("No validators set")}string(){return this.initialise("string",[[Z,F]]),this}number(){return this.initialise("number",[[U,F]]),this}boolean(){return this.initialise("boolean",[[q,F]]),this}required(){return this.isRequired=!0,this}isEmail(...t){return this.checkValid(),this.validators.push([W,t]),this}doesMatch(...t){return this.checkValid(),this.validators.push([z,t]),this}hasMin(...t){return this.checkValid(),this.validators.push([G,t]),this}hasMax(...t){return this.checkValid(),this.validators.push([J,t]),this}hasRange(...t){return this.checkValid(),this.validators.push([K,t]),this}containsNoSpaces(...t){return this.checkValid(),this.validators.push([Q,t]),this}matchesRegex(...t){return this.checkValid(),this.validators.push([X,t]),this}hasCustomValidation(...t){return this.checkValid(),this.validators.push([Y,t]),this}}a(w,"SchemaEntry");class L{constructor(t){m(this,"self");m(this,"fields");m(this,"names");m(this,"errors",{});m(this,"validationHints");return this.self=t,this.fields=Object.keys(t),this.names=Object.entries(t).reduce((s,[i,r])=>({...s,[i]:r.name}),{}),this.validationHints={},this.initValidationHints(),this}static add(t){return new w(t)}get(t){return this.self[t]}getErrors(t){return this.errors[t]}setErrors(t,s){!s||s.length===0?delete this.errors[t]:this.errors[t]=s}getValidationHints(t){return this.validationHints[t]}setValidationHints(t,s,i,r){this.validationHints[t]={...this.validationHints[t],[s]:{passes:i,hint:r}}}initValidationHint(t){this.get(t).validators.forEach(i=>{const[,r]=i,[n,u,p]=r;p&&this.setValidationHints(t,[n,u].join("."),!1,p)})}initValidationHints(){this.fields.forEach(t=>{this.initValidationHint(t)})}resetValidationHints(t){this.validationHints[t]&&Object.keys(this.validationHints[t]).forEach(s=>{this.validationHints[t][s].passes=!1})}async validate(t,s,i){const r=this.get(t);if(!r)return;const n=r.isRequired,u=await T(r.primitiveType).validate(s,i);if(n&&u)return this.setErrors(t,[u]),this.resetValidationHints(t),this.getErrors(t);const y=(await Promise.all(r.validators.map(async f=>{const[x,E]=f,[M,H,o]=E,d=await x(...E).validate(s,i);return o&&this.setValidationHints(t,[M,H].join("."),!d&&s!=="",o),d}))).filter(f=>f);return this.setErrors(t,y),this.getErrors(t)}}a(L,"Schema");const tt=a((e,t={})=>{if(!e)throw new Error("No schema provided! Please provide a schema to useIndyForm");const s=O({mode:"onTouched",resolver:N(e),...t}),{formState:i,getValues:r,setError:n}=s;D.useEffect(()=>{const o=e.fields,c=Object.keys(r()),d=o.filter(g=>!c.includes(g));if(d.length>0)throw new Error(`Fields ["${d.join('", "')}"] are included in the schema but missing or inaccessible by React Hook Form`)},[r,e.fields]);const u=a(o=>{const d=i.errors[o];if(d)return d[0].messageBuilder(e.names[o])},"getTextInputError"),p=a(o=>{const c=!!i.errors.root,d=!!i.errors[o],g=i.dirtyFields[o]&&!d;return d||c?b.ERROR:g?b.SUCCESS:b.DEFAULT},"getTextInputState");return{registerControlledInput:a(o=>{var S;const c=((S=e.get(o))==null?void 0:S.isRequired)||!1,d=u(o),g=p(o);return{id:o,state:g,message:d,required:c,"aria-required":c,"aria-invalid":d==="error","aria-describedby":`${k(o)} ${j(o)}`}},"registerControlledInput"),methods:{...s,setFormError:a(o=>{n("root",{message:o})},"setFormError"),setFieldError:a((o,c)=>{n(o,{message:c},{shouldFocus:!0})},"setFieldError"),getFormError:a(()=>u("root"),"getFormError"),getFieldErrors:a(()=>e.fields.map(u).filter(Boolean),"getFieldErrors"),getFieldValidationHints:a(o=>e.validationHints[o],"getFieldValidationHints")},formState:{...i,errors:i.errors}}},"useIndyForm"),et=C.div.withConfig({componentId:"sc-1svnbpo-0"})(["max-width:400px;"]),V=a(({onSubmit:e,schema:t,children:s})=>{const{methods:i,registerControlledInput:r}=tt(t),{handleSubmit:n,formState:u}=i;return v.jsx(et,{children:v.jsx(P,{...i,children:v.jsxs(A,{children:[s({registerControlledInput:r}),v.jsx(_,{type:"submit",disabled:!u.isValid,onClick:n(e),children:"Submit"})]})})})},"TestableForm"),ft=V;try{V.displayName="TestableForm",V.__docgenInfo={description:`This wrapper exists to make testing easier by setting up a simple form
and accepting input elements as children to be tested.

This should not be used in production, but may be helpful reference`,displayName:"TestableForm",props:{onSubmit:{defaultValue:null,description:"",name:"onSubmit",required:!0,type:{name:"SubmitHandler<FormData>"}},schema:{defaultValue:null,description:"",name:"schema",required:!0,type:{name:"Schema<FormData>"}}}}}catch{}export{L as S,ft as T};
//# sourceMappingURL=TestableForm-03424573.js.map
