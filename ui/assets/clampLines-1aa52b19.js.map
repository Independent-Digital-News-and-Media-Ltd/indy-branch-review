{"version":3,"file":"clampLines-1aa52b19.js","sources":["../../../src/utils/clampLines.ts"],"sourcesContent":["import { css } from 'styled-components';\nexport function sanitiseCssVar(value: string | number) {\n  return typeof value === 'string' && value.startsWith('--')\n    ? `var(${value})`\n    : value;\n}\n\n/**\n * In lieu of string pattern matching, this is a type alias for a CSS variable e.g. --var\n * @typedef CSSVar\n * @type {string}\n */\n\n/**\n * Truncates text with an ellipsis when the number of lines is exceeded\n * @param {number | CSSVar} lines The number of lines to clamp to\n * @param {number | CSSVar | null} lineHeight The line height (only required if\n * fixedHeight is `true`)\n * @param {bool | CSSVar} fixedHeight Fix the height of the element. If `true`,\n * this will be calculated from the number of lines and the line height. If a\n * CSS variable is passed, this will be used as the height\n * @returns The CSS required to clamp the lines\n */\nexport default function clampLines(\n  lines: string | number = 3,\n  lineHeight: string | number = '1em',\n  fixedHeight: boolean | string = true,\n) {\n  const height =\n    fixedHeight === true\n      ? `calc(${sanitiseCssVar(lines)} * ${sanitiseCssVar(lineHeight)});`\n      : typeof fixedHeight === 'string' && fixedHeight.startsWith('--')\n        ? `var(${fixedHeight})`\n        : 'auto';\n\n  return css`\n    display: -webkit-box;\n    overflow: hidden;\n    height: ${height};\n    -webkit-box-orient: vertical;\n    -webkit-line-clamp: ${sanitiseCssVar(lines)};\n    text-overflow: initial;\n    white-space: initial;\n  `;\n}\n"],"names":["sanitiseCssVar","value","startsWith","clampLines","lines","lineHeight","fixedHeight","height","css"],"mappings":"+IACO,SAASA,EAAeC,EAAwB,CAC9C,OAAA,OAAOA,GAAU,UAAYA,EAAMC,WAAW,IAAI,EACpD,OAAMD,KACPA,CACN,CAJgBD,EAAAA,EAAAA,kBAsBhB,SAAwBG,EACtBC,EAAyB,EACzBC,EAA8B,MAC9BC,EAAgC,GAChC,CACA,MAAMC,EACJD,IAAgB,GACX,QAAON,EAAeI,CAAK,OAAOJ,EAAeK,CAAU,MAC5D,OAAOC,GAAgB,UAAYA,EAAYJ,WAAW,IAAI,EAC3D,OAAMI,KACP,OAEDE,OAAAA,EAGKD,CAAAA,8CAAAA,mDAAAA,6CAAAA,EAAAA,EAEYP,EAAeI,CAAK,CAAC,CAI/C,CArBwBD,EAAAA,EAAAA"}